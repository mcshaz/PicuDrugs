//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PICUdrugs.Code.DataAccessLayer
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class PicuDrugDb : DbContext
    {
        public PicuDrugDb()
            : base("name=PicuDrugDb")
        {
            this.Configuration.LazyLoadingEnabled = false;
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<BolusDose> BolusDoses { get; set; }
        public DbSet<BolusDrug> BolusDrugs { get; set; }
        public DbSet<BolusSortOrdering> BolusSortOrderings { get; set; }
        public DbSet<CdcWeightForAge> CdcWeightForAges { get; set; }
        public DbSet<DefibJoule> DefibJoules { get; set; }
        public DbSet<DefibModel> DefibModels { get; set; }
        public DbSet<DilutionMethod> DilutionMethods { get; set; }
        public DbSet<DoseCat> DoseCats { get; set; }
        public DbSet<DrugAmpuleConcentration> DrugAmpuleConcentrations { get; set; }
        public DbSet<DrugReferenceSource> DrugReferenceSources { get; set; }
        public DbSet<DrugRoute> DrugRoutes { get; set; }
        public DbSet<FixedTimeConcentration> FixedTimeConcentrations { get; set; }
        public DbSet<FixedTimeDilution> FixedTimeDilutions { get; set; }
        public DbSet<InfusionDiluent> InfusionDiluents { get; set; }
        public DbSet<InfusionDrug> InfusionDrugs { get; set; }
        public DbSet<InfusionSortOrdering> InfusionSortOrderings { get; set; }
        public DbSet<SiUnit> SiUnits { get; set; }
        public DbSet<VariableTimeConcentration> VariableTimeConcentrations { get; set; }
        public DbSet<VariableTimeDilution> VariableTimeDilutions { get; set; }
        public DbSet<Ward> Wards { get; set; }
        public DbSet<vw_VariableDurationInfusion> vw_VariableDurationInfusion { get; set; }
    
        public virtual ObjectResult<pVariableTimeInfusions_Result> pVariableTimeInfusions(Nullable<int> wardId, Nullable<double> weight, Nullable<int> ageMonths)
        {
            var wardIdParameter = wardId.HasValue ?
                new ObjectParameter("wardId", wardId) :
                new ObjectParameter("wardId", typeof(int));
    
            var weightParameter = weight.HasValue ?
                new ObjectParameter("weight", weight) :
                new ObjectParameter("weight", typeof(double));
    
            var ageMonthsParameter = ageMonths.HasValue ?
                new ObjectParameter("ageMonths", ageMonths) :
                new ObjectParameter("ageMonths", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pVariableTimeInfusions_Result>("pVariableTimeInfusions", wardIdParameter, weightParameter, ageMonthsParameter);
        }
    }
}
