//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("PICUdrugs.DAL", "FK_BolusDoses_BolusDrugs", "BolusDrugs", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PICUdrugs.DAL.BolusDrug), "BolusDoses", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PICUdrugs.DAL.BolusDose), true)]
[assembly: EdmRelationshipAttribute("PICUdrugs.DAL", "FK_BolusSortOrdering_BolusDrugs", "BolusDrugs", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(PICUdrugs.DAL.BolusDrug), "BolusSortOrdering", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PICUdrugs.DAL.BolusSortOrdering), true)]
[assembly: EdmRelationshipAttribute("PICUdrugs.DAL", "FK_BolusSortOrdering_Wards", "Wards", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PICUdrugs.DAL.Ward), "BolusSortOrdering", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PICUdrugs.DAL.BolusSortOrdering), true)]
[assembly: EdmRelationshipAttribute("PICUdrugs.DAL", "FK_DefibJoules_DefibModel", "DefibModel", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PICUdrugs.DAL.DefibModel), "DefibJoules", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PICUdrugs.DAL.DefibJoule), true)]
[assembly: EdmRelationshipAttribute("PICUdrugs.DAL", "FK_Wards_DefibModel", "DefibModel", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PICUdrugs.DAL.DefibModel), "Wards", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PICUdrugs.DAL.Ward), true)]
[assembly: EdmRelationshipAttribute("PICUdrugs.DAL", "FK_FixedTimeDilutions_DilutionMethods", "DilutionMethods", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PICUdrugs.DAL.DilutionMethod), "FixedTimeDilutions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PICUdrugs.DAL.FixedTimeDilution), true)]
[assembly: EdmRelationshipAttribute("PICUdrugs.DAL", "FK_InfusionDilutions_DilutionMethods", "DilutionMethods", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PICUdrugs.DAL.DilutionMethod), "VariableTimeDilutions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PICUdrugs.DAL.VariableTimeDilution), true)]
[assembly: EdmRelationshipAttribute("PICUdrugs.DAL", "FK_FinalInfusionConcentrations_DoseCats", "DoseCats", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(PICUdrugs.DAL.DoseCat), "VariableTimeConcentrations", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PICUdrugs.DAL.VariableTimeConcentration), true)]
[assembly: EdmRelationshipAttribute("PICUdrugs.DAL", "FK_DrugAmpuleConcentrations_InfusionDrugs", "InfusionDrugs", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PICUdrugs.DAL.InfusionDrug), "DrugAmpuleConcentrations", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PICUdrugs.DAL.DrugAmpuleConcentration), true)]
[assembly: EdmRelationshipAttribute("PICUdrugs.DAL", "FK_InfusionDrugs_DrugReferences", "DrugReferenceSource", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(PICUdrugs.DAL.DrugReferenceSource), "InfusionDrugs", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PICUdrugs.DAL.InfusionDrug), true)]
[assembly: EdmRelationshipAttribute("PICUdrugs.DAL", "FK_InfusionDrugs_DrugRoutes", "DrugRoutes", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(PICUdrugs.DAL.DrugRoute), "InfusionDrugs", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PICUdrugs.DAL.InfusionDrug), true)]
[assembly: EdmRelationshipAttribute("PICUdrugs.DAL", "FK_FixedTimeConcentrations_FixedTimeDilutions", "FixedTimeDilutions", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PICUdrugs.DAL.FixedTimeDilution), "FixedTimeConcentrations", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PICUdrugs.DAL.FixedTimeConcentration), true)]
[assembly: EdmRelationshipAttribute("PICUdrugs.DAL", "FK_FixedTimeDilutions_InfusionDrugs", "InfusionDrugs", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PICUdrugs.DAL.InfusionDrug), "FixedTimeDilutions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PICUdrugs.DAL.FixedTimeDilution), true)]
[assembly: EdmRelationshipAttribute("PICUdrugs.DAL", "FK_InfusionDrugs_InfusionDiluents", "InfusionDiluents", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PICUdrugs.DAL.InfusionDiluent), "InfusionDrugs", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PICUdrugs.DAL.InfusionDrug), true)]
[assembly: EdmRelationshipAttribute("PICUdrugs.DAL", "FK_InfusionDilutions_InfusionDrugs", "InfusionDrugs", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PICUdrugs.DAL.InfusionDrug), "VariableTimeDilutions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PICUdrugs.DAL.VariableTimeDilution), true)]
[assembly: EdmRelationshipAttribute("PICUdrugs.DAL", "FK_InfusionDrugs_SiUnits", "SiUnits", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PICUdrugs.DAL.SiUnit), "InfusionDrugs", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PICUdrugs.DAL.InfusionDrug), true)]
[assembly: EdmRelationshipAttribute("PICUdrugs.DAL", "FK_InfusionSortOrdering_InfusionDrugs", "InfusionDrugs", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PICUdrugs.DAL.InfusionDrug), "InfusionSortOrdering", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PICUdrugs.DAL.InfusionSortOrdering), true)]
[assembly: EdmRelationshipAttribute("PICUdrugs.DAL", "FK_InfusionSortOrdering_Wards", "Wards", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PICUdrugs.DAL.Ward), "InfusionSortOrdering", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PICUdrugs.DAL.InfusionSortOrdering), true)]
[assembly: EdmRelationshipAttribute("PICUdrugs.DAL", "FK_FinalInfusionConcentrations_InfusionDilutions", "VariableTimeDilutions", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PICUdrugs.DAL.VariableTimeDilution), "VariableTimeConcentrations", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PICUdrugs.DAL.VariableTimeConcentration), true)]

#endregion

namespace PICUdrugs.DAL
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class PicuDrugDb : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new PicuDrugDb object using the connection string found in the 'PicuDrugDb' section of the application configuration file.
        /// </summary>
        public PicuDrugDb() : base("name=PicuDrugDb", "PicuDrugDb")
        {
            this.ContextOptions.LazyLoadingEnabled = false;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new PicuDrugDb object.
        /// </summary>
        public PicuDrugDb(string connectionString) : base(connectionString, "PicuDrugDb")
        {
            this.ContextOptions.LazyLoadingEnabled = false;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new PicuDrugDb object.
        /// </summary>
        public PicuDrugDb(EntityConnection connection) : base(connection, "PicuDrugDb")
        {
            this.ContextOptions.LazyLoadingEnabled = false;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BolusDose> BolusDoses
        {
            get
            {
                if ((_BolusDoses == null))
                {
                    _BolusDoses = base.CreateObjectSet<BolusDose>("BolusDoses");
                }
                return _BolusDoses;
            }
        }
        private ObjectSet<BolusDose> _BolusDoses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BolusDrug> BolusDrugs
        {
            get
            {
                if ((_BolusDrugs == null))
                {
                    _BolusDrugs = base.CreateObjectSet<BolusDrug>("BolusDrugs");
                }
                return _BolusDrugs;
            }
        }
        private ObjectSet<BolusDrug> _BolusDrugs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BolusSortOrdering> BolusSortOrderings
        {
            get
            {
                if ((_BolusSortOrderings == null))
                {
                    _BolusSortOrderings = base.CreateObjectSet<BolusSortOrdering>("BolusSortOrderings");
                }
                return _BolusSortOrderings;
            }
        }
        private ObjectSet<BolusSortOrdering> _BolusSortOrderings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DefibJoule> DefibJoules
        {
            get
            {
                if ((_DefibJoules == null))
                {
                    _DefibJoules = base.CreateObjectSet<DefibJoule>("DefibJoules");
                }
                return _DefibJoules;
            }
        }
        private ObjectSet<DefibJoule> _DefibJoules;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DefibModel> DefibModels
        {
            get
            {
                if ((_DefibModels == null))
                {
                    _DefibModels = base.CreateObjectSet<DefibModel>("DefibModels");
                }
                return _DefibModels;
            }
        }
        private ObjectSet<DefibModel> _DefibModels;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DilutionMethod> DilutionMethods
        {
            get
            {
                if ((_DilutionMethods == null))
                {
                    _DilutionMethods = base.CreateObjectSet<DilutionMethod>("DilutionMethods");
                }
                return _DilutionMethods;
            }
        }
        private ObjectSet<DilutionMethod> _DilutionMethods;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DoseCat> DoseCats
        {
            get
            {
                if ((_DoseCats == null))
                {
                    _DoseCats = base.CreateObjectSet<DoseCat>("DoseCats");
                }
                return _DoseCats;
            }
        }
        private ObjectSet<DoseCat> _DoseCats;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DrugAmpuleConcentration> DrugAmpuleConcentrations
        {
            get
            {
                if ((_DrugAmpuleConcentrations == null))
                {
                    _DrugAmpuleConcentrations = base.CreateObjectSet<DrugAmpuleConcentration>("DrugAmpuleConcentrations");
                }
                return _DrugAmpuleConcentrations;
            }
        }
        private ObjectSet<DrugAmpuleConcentration> _DrugAmpuleConcentrations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DrugReferenceSource> DrugReferenceSources
        {
            get
            {
                if ((_DrugReferenceSources == null))
                {
                    _DrugReferenceSources = base.CreateObjectSet<DrugReferenceSource>("DrugReferenceSources");
                }
                return _DrugReferenceSources;
            }
        }
        private ObjectSet<DrugReferenceSource> _DrugReferenceSources;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DrugRoute> DrugRoutes
        {
            get
            {
                if ((_DrugRoutes == null))
                {
                    _DrugRoutes = base.CreateObjectSet<DrugRoute>("DrugRoutes");
                }
                return _DrugRoutes;
            }
        }
        private ObjectSet<DrugRoute> _DrugRoutes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FixedTimeConcentration> FixedTimeConcentrations
        {
            get
            {
                if ((_FixedTimeConcentrations == null))
                {
                    _FixedTimeConcentrations = base.CreateObjectSet<FixedTimeConcentration>("FixedTimeConcentrations");
                }
                return _FixedTimeConcentrations;
            }
        }
        private ObjectSet<FixedTimeConcentration> _FixedTimeConcentrations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FixedTimeDilution> FixedTimeDilutions
        {
            get
            {
                if ((_FixedTimeDilutions == null))
                {
                    _FixedTimeDilutions = base.CreateObjectSet<FixedTimeDilution>("FixedTimeDilutions");
                }
                return _FixedTimeDilutions;
            }
        }
        private ObjectSet<FixedTimeDilution> _FixedTimeDilutions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InfusionDiluent> InfusionDiluents
        {
            get
            {
                if ((_InfusionDiluents == null))
                {
                    _InfusionDiluents = base.CreateObjectSet<InfusionDiluent>("InfusionDiluents");
                }
                return _InfusionDiluents;
            }
        }
        private ObjectSet<InfusionDiluent> _InfusionDiluents;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InfusionDrug> InfusionDrugs
        {
            get
            {
                if ((_InfusionDrugs == null))
                {
                    _InfusionDrugs = base.CreateObjectSet<InfusionDrug>("InfusionDrugs");
                }
                return _InfusionDrugs;
            }
        }
        private ObjectSet<InfusionDrug> _InfusionDrugs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InfusionSortOrdering> InfusionSortOrderings
        {
            get
            {
                if ((_InfusionSortOrderings == null))
                {
                    _InfusionSortOrderings = base.CreateObjectSet<InfusionSortOrdering>("InfusionSortOrderings");
                }
                return _InfusionSortOrderings;
            }
        }
        private ObjectSet<InfusionSortOrdering> _InfusionSortOrderings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SiUnit> SiUnits
        {
            get
            {
                if ((_SiUnits == null))
                {
                    _SiUnits = base.CreateObjectSet<SiUnit>("SiUnits");
                }
                return _SiUnits;
            }
        }
        private ObjectSet<SiUnit> _SiUnits;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<VariableTimeConcentration> VariableTimeConcentrations
        {
            get
            {
                if ((_VariableTimeConcentrations == null))
                {
                    _VariableTimeConcentrations = base.CreateObjectSet<VariableTimeConcentration>("VariableTimeConcentrations");
                }
                return _VariableTimeConcentrations;
            }
        }
        private ObjectSet<VariableTimeConcentration> _VariableTimeConcentrations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<VariableTimeDilution> VariableTimeDilutions
        {
            get
            {
                if ((_VariableTimeDilutions == null))
                {
                    _VariableTimeDilutions = base.CreateObjectSet<VariableTimeDilution>("VariableTimeDilutions");
                }
                return _VariableTimeDilutions;
            }
        }
        private ObjectSet<VariableTimeDilution> _VariableTimeDilutions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Ward> Wards
        {
            get
            {
                if ((_Wards == null))
                {
                    _Wards = base.CreateObjectSet<Ward>("Wards");
                }
                return _Wards;
            }
        }
        private ObjectSet<Ward> _Wards;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vw_VariableDurationInfusion> vw_VariableDurationInfusion
        {
            get
            {
                if ((_vw_VariableDurationInfusion == null))
                {
                    _vw_VariableDurationInfusion = base.CreateObjectSet<vw_VariableDurationInfusion>("vw_VariableDurationInfusion");
                }
                return _vw_VariableDurationInfusion;
            }
        }
        private ObjectSet<vw_VariableDurationInfusion> _vw_VariableDurationInfusion;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CdcBmiForAge> CdcBmiForAges
        {
            get
            {
                if ((_CdcBmiForAges == null))
                {
                    _CdcBmiForAges = base.CreateObjectSet<CdcBmiForAge>("CdcBmiForAges");
                }
                return _CdcBmiForAges;
            }
        }
        private ObjectSet<CdcBmiForAge> _CdcBmiForAges;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CdcLengthForAge> CdcLengthForAges
        {
            get
            {
                if ((_CdcLengthForAges == null))
                {
                    _CdcLengthForAges = base.CreateObjectSet<CdcLengthForAge>("CdcLengthForAges");
                }
                return _CdcLengthForAges;
            }
        }
        private ObjectSet<CdcLengthForAge> _CdcLengthForAges;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CdcWeightForAge> CdcWeightForAges
        {
            get
            {
                if ((_CdcWeightForAges == null))
                {
                    _CdcWeightForAges = base.CreateObjectSet<CdcWeightForAge>("CdcWeightForAges");
                }
                return _CdcWeightForAges;
            }
        }
        private ObjectSet<CdcWeightForAge> _CdcWeightForAges;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BolusDoses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBolusDoses(BolusDose bolusDose)
        {
            base.AddObject("BolusDoses", bolusDose);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BolusDrugs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBolusDrugs(BolusDrug bolusDrug)
        {
            base.AddObject("BolusDrugs", bolusDrug);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BolusSortOrderings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBolusSortOrderings(BolusSortOrdering bolusSortOrdering)
        {
            base.AddObject("BolusSortOrderings", bolusSortOrdering);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DefibJoules EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDefibJoules(DefibJoule defibJoule)
        {
            base.AddObject("DefibJoules", defibJoule);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DefibModels EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDefibModels(DefibModel defibModel)
        {
            base.AddObject("DefibModels", defibModel);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DilutionMethods EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDilutionMethods(DilutionMethod dilutionMethod)
        {
            base.AddObject("DilutionMethods", dilutionMethod);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DoseCats EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDoseCats(DoseCat doseCat)
        {
            base.AddObject("DoseCats", doseCat);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DrugAmpuleConcentrations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDrugAmpuleConcentrations(DrugAmpuleConcentration drugAmpuleConcentration)
        {
            base.AddObject("DrugAmpuleConcentrations", drugAmpuleConcentration);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DrugReferenceSources EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDrugReferenceSources(DrugReferenceSource drugReferenceSource)
        {
            base.AddObject("DrugReferenceSources", drugReferenceSource);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DrugRoutes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDrugRoutes(DrugRoute drugRoute)
        {
            base.AddObject("DrugRoutes", drugRoute);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FixedTimeConcentrations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFixedTimeConcentrations(FixedTimeConcentration fixedTimeConcentration)
        {
            base.AddObject("FixedTimeConcentrations", fixedTimeConcentration);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FixedTimeDilutions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFixedTimeDilutions(FixedTimeDilution fixedTimeDilution)
        {
            base.AddObject("FixedTimeDilutions", fixedTimeDilution);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InfusionDiluents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInfusionDiluents(InfusionDiluent infusionDiluent)
        {
            base.AddObject("InfusionDiluents", infusionDiluent);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InfusionDrugs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInfusionDrugs(InfusionDrug infusionDrug)
        {
            base.AddObject("InfusionDrugs", infusionDrug);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InfusionSortOrderings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInfusionSortOrderings(InfusionSortOrdering infusionSortOrdering)
        {
            base.AddObject("InfusionSortOrderings", infusionSortOrdering);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SiUnits EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSiUnits(SiUnit siUnit)
        {
            base.AddObject("SiUnits", siUnit);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the VariableTimeConcentrations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVariableTimeConcentrations(VariableTimeConcentration variableTimeConcentration)
        {
            base.AddObject("VariableTimeConcentrations", variableTimeConcentration);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the VariableTimeDilutions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVariableTimeDilutions(VariableTimeDilution variableTimeDilution)
        {
            base.AddObject("VariableTimeDilutions", variableTimeDilution);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Wards EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWards(Ward ward)
        {
            base.AddObject("Wards", ward);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vw_VariableDurationInfusion EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovw_VariableDurationInfusion(vw_VariableDurationInfusion vw_VariableDurationInfusion)
        {
            base.AddObject("vw_VariableDurationInfusion", vw_VariableDurationInfusion);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CdcBmiForAges EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCdcBmiForAges(CdcBmiForAge cdcBmiForAge)
        {
            base.AddObject("CdcBmiForAges", cdcBmiForAge);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CdcLengthForAges EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCdcLengthForAges(CdcLengthForAge cdcLengthForAge)
        {
            base.AddObject("CdcLengthForAges", cdcLengthForAge);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CdcWeightForAges EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCdcWeightForAges(CdcWeightForAge cdcWeightForAge)
        {
            base.AddObject("CdcWeightForAges", cdcWeightForAge);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="wardId">No Metadata Documentation available.</param>
        /// <param name="weight">No Metadata Documentation available.</param>
        /// <param name="ageMonths">No Metadata Documentation available.</param>
        public ObjectResult<pVariableTimeInfusions_Result> pVariableTimeInfusions(Nullable<global::System.Int32> wardId, Nullable<global::System.Double> weight, Nullable<global::System.Int32> ageMonths)
        {
            ObjectParameter wardIdParameter;
            if (wardId.HasValue)
            {
                wardIdParameter = new ObjectParameter("wardId", wardId);
            }
            else
            {
                wardIdParameter = new ObjectParameter("wardId", typeof(global::System.Int32));
            }
    
            ObjectParameter weightParameter;
            if (weight.HasValue)
            {
                weightParameter = new ObjectParameter("weight", weight);
            }
            else
            {
                weightParameter = new ObjectParameter("weight", typeof(global::System.Double));
            }
    
            ObjectParameter ageMonthsParameter;
            if (ageMonths.HasValue)
            {
                ageMonthsParameter = new ObjectParameter("ageMonths", ageMonths);
            }
            else
            {
                ageMonthsParameter = new ObjectParameter("ageMonths", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<pVariableTimeInfusions_Result>("pVariableTimeInfusions", wardIdParameter, weightParameter, ageMonthsParameter);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PICUdrugs.DAL", Name="BolusDose")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BolusDose : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BolusDose object.
        /// </summary>
        /// <param name="bolusDoseId">Initial value of the BolusDoseId property.</param>
        /// <param name="bolusDrugId">Initial value of the BolusDrugId property.</param>
        /// <param name="minDosePerKg">Initial value of the MinDosePerKg property.</param>
        /// <param name="maxDosePerKg">Initial value of the MaxDosePerKg property.</param>
        /// <param name="weightMin">Initial value of the WeightMin property.</param>
        /// <param name="weightMax">Initial value of the WeightMax property.</param>
        public static BolusDose CreateBolusDose(global::System.Int32 bolusDoseId, global::System.Int32 bolusDrugId, global::System.Double minDosePerKg, global::System.Double maxDosePerKg, global::System.Double weightMin, global::System.Double weightMax)
        {
            BolusDose bolusDose = new BolusDose();
            bolusDose.BolusDoseId = bolusDoseId;
            bolusDose.BolusDrugId = bolusDrugId;
            bolusDose.MinDosePerKg = minDosePerKg;
            bolusDose.MaxDosePerKg = maxDosePerKg;
            bolusDose.WeightMin = weightMin;
            bolusDose.WeightMax = weightMax;
            return bolusDose;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BolusDoseId
        {
            get
            {
                return _BolusDoseId;
            }
            set
            {
                if (_BolusDoseId != value)
                {
                    OnBolusDoseIdChanging(value);
                    ReportPropertyChanging("BolusDoseId");
                    _BolusDoseId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BolusDoseId");
                    OnBolusDoseIdChanged();
                }
            }
        }
        private global::System.Int32 _BolusDoseId;
        partial void OnBolusDoseIdChanging(global::System.Int32 value);
        partial void OnBolusDoseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BolusDrugId
        {
            get
            {
                return _BolusDrugId;
            }
            set
            {
                OnBolusDrugIdChanging(value);
                ReportPropertyChanging("BolusDrugId");
                _BolusDrugId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BolusDrugId");
                OnBolusDrugIdChanged();
            }
        }
        private global::System.Int32 _BolusDrugId;
        partial void OnBolusDrugIdChanging(global::System.Int32 value);
        partial void OnBolusDrugIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double MinDosePerKg
        {
            get
            {
                return _MinDosePerKg;
            }
            set
            {
                OnMinDosePerKgChanging(value);
                ReportPropertyChanging("MinDosePerKg");
                _MinDosePerKg = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MinDosePerKg");
                OnMinDosePerKgChanged();
            }
        }
        private global::System.Double _MinDosePerKg;
        partial void OnMinDosePerKgChanging(global::System.Double value);
        partial void OnMinDosePerKgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double MaxDosePerKg
        {
            get
            {
                return _MaxDosePerKg;
            }
            set
            {
                OnMaxDosePerKgChanging(value);
                ReportPropertyChanging("MaxDosePerKg");
                _MaxDosePerKg = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaxDosePerKg");
                OnMaxDosePerKgChanged();
            }
        }
        private global::System.Double _MaxDosePerKg;
        partial void OnMaxDosePerKgChanging(global::System.Double value);
        partial void OnMaxDosePerKgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double WeightMin
        {
            get
            {
                return _WeightMin;
            }
            set
            {
                OnWeightMinChanging(value);
                ReportPropertyChanging("WeightMin");
                _WeightMin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WeightMin");
                OnWeightMinChanged();
            }
        }
        private global::System.Double _WeightMin;
        partial void OnWeightMinChanging(global::System.Double value);
        partial void OnWeightMinChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double WeightMax
        {
            get
            {
                return _WeightMax;
            }
            set
            {
                OnWeightMaxChanging(value);
                ReportPropertyChanging("WeightMax");
                _WeightMax = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WeightMax");
                OnWeightMaxChanged();
            }
        }
        private global::System.Double _WeightMax;
        partial void OnWeightMaxChanging(global::System.Double value);
        partial void OnWeightMaxChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PICUdrugs.DAL", "FK_BolusDoses_BolusDrugs", "BolusDrugs")]
        public BolusDrug BolusDrug
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BolusDrug>("PICUdrugs.DAL.FK_BolusDoses_BolusDrugs", "BolusDrugs").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BolusDrug>("PICUdrugs.DAL.FK_BolusDoses_BolusDrugs", "BolusDrugs").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BolusDrug> BolusDrugReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BolusDrug>("PICUdrugs.DAL.FK_BolusDoses_BolusDrugs", "BolusDrugs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BolusDrug>("PICUdrugs.DAL.FK_BolusDoses_BolusDrugs", "BolusDrugs", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PICUdrugs.DAL", Name="BolusDrug")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BolusDrug : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BolusDrug object.
        /// </summary>
        /// <param name="bolusDrugId">Initial value of the BolusDrugId property.</param>
        /// <param name="drugName">Initial value of the DrugName property.</param>
        /// <param name="conc_ml">Initial value of the Conc_ml property.</param>
        /// <param name="units">Initial value of the Units property.</param>
        /// <param name="adultMax">Initial value of the AdultMax property.</param>
        public static BolusDrug CreateBolusDrug(global::System.Int32 bolusDrugId, global::System.String drugName, global::System.Double conc_ml, global::System.String units, global::System.Double adultMax)
        {
            BolusDrug bolusDrug = new BolusDrug();
            bolusDrug.BolusDrugId = bolusDrugId;
            bolusDrug.DrugName = drugName;
            bolusDrug.Conc_ml = conc_ml;
            bolusDrug.Units = units;
            bolusDrug.AdultMax = adultMax;
            return bolusDrug;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BolusDrugId
        {
            get
            {
                return _BolusDrugId;
            }
            set
            {
                if (_BolusDrugId != value)
                {
                    OnBolusDrugIdChanging(value);
                    ReportPropertyChanging("BolusDrugId");
                    _BolusDrugId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BolusDrugId");
                    OnBolusDrugIdChanged();
                }
            }
        }
        private global::System.Int32 _BolusDrugId;
        partial void OnBolusDrugIdChanging(global::System.Int32 value);
        partial void OnBolusDrugIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DrugName
        {
            get
            {
                return _DrugName;
            }
            set
            {
                OnDrugNameChanging(value);
                ReportPropertyChanging("DrugName");
                _DrugName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DrugName");
                OnDrugNameChanged();
            }
        }
        private global::System.String _DrugName;
        partial void OnDrugNameChanging(global::System.String value);
        partial void OnDrugNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Route
        {
            get
            {
                return _Route;
            }
            set
            {
                OnRouteChanging(value);
                ReportPropertyChanging("Route");
                _Route = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Route");
                OnRouteChanged();
            }
        }
        private global::System.String _Route;
        partial void OnRouteChanging(global::System.String value);
        partial void OnRouteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Conc_ml
        {
            get
            {
                return _Conc_ml;
            }
            set
            {
                OnConc_mlChanging(value);
                ReportPropertyChanging("Conc_ml");
                _Conc_ml = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Conc_ml");
                OnConc_mlChanged();
            }
        }
        private global::System.Double _Conc_ml;
        partial void OnConc_mlChanging(global::System.Double value);
        partial void OnConc_mlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Units
        {
            get
            {
                return _Units;
            }
            set
            {
                OnUnitsChanging(value);
                ReportPropertyChanging("Units");
                _Units = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Units");
                OnUnitsChanged();
            }
        }
        private global::System.String _Units;
        partial void OnUnitsChanging(global::System.String value);
        partial void OnUnitsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double AdultMax
        {
            get
            {
                return _AdultMax;
            }
            set
            {
                OnAdultMaxChanging(value);
                ReportPropertyChanging("AdultMax");
                _AdultMax = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdultMax");
                OnAdultMaxChanged();
            }
        }
        private global::System.Double _AdultMax;
        partial void OnAdultMaxChanging(global::System.Double value);
        partial void OnAdultMaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AmpuleConcentration
        {
            get
            {
                return _AmpuleConcentration;
            }
            set
            {
                OnAmpuleConcentrationChanging(value);
                ReportPropertyChanging("AmpuleConcentration");
                _AmpuleConcentration = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AmpuleConcentration");
                OnAmpuleConcentrationChanged();
            }
        }
        private global::System.String _AmpuleConcentration;
        partial void OnAmpuleConcentrationChanging(global::System.String value);
        partial void OnAmpuleConcentrationChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PICUdrugs.DAL", "FK_BolusDoses_BolusDrugs", "BolusDoses")]
        public EntityCollection<BolusDose> BolusDoses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BolusDose>("PICUdrugs.DAL.FK_BolusDoses_BolusDrugs", "BolusDoses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BolusDose>("PICUdrugs.DAL.FK_BolusDoses_BolusDrugs", "BolusDoses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PICUdrugs.DAL", "FK_BolusSortOrdering_BolusDrugs", "BolusSortOrdering")]
        public EntityCollection<BolusSortOrdering> BolusSortOrderings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BolusSortOrdering>("PICUdrugs.DAL.FK_BolusSortOrdering_BolusDrugs", "BolusSortOrdering");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BolusSortOrdering>("PICUdrugs.DAL.FK_BolusSortOrdering_BolusDrugs", "BolusSortOrdering", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PICUdrugs.DAL", Name="BolusSortOrdering")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BolusSortOrdering : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BolusSortOrdering object.
        /// </summary>
        /// <param name="bolusSortOrderId">Initial value of the BolusSortOrderId property.</param>
        /// <param name="wardId">Initial value of the WardId property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        public static BolusSortOrdering CreateBolusSortOrdering(global::System.Int32 bolusSortOrderId, global::System.Int32 wardId, global::System.Int32 sortOrder)
        {
            BolusSortOrdering bolusSortOrdering = new BolusSortOrdering();
            bolusSortOrdering.BolusSortOrderId = bolusSortOrderId;
            bolusSortOrdering.WardId = wardId;
            bolusSortOrdering.SortOrder = sortOrder;
            return bolusSortOrdering;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BolusSortOrderId
        {
            get
            {
                return _BolusSortOrderId;
            }
            set
            {
                if (_BolusSortOrderId != value)
                {
                    OnBolusSortOrderIdChanging(value);
                    ReportPropertyChanging("BolusSortOrderId");
                    _BolusSortOrderId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BolusSortOrderId");
                    OnBolusSortOrderIdChanged();
                }
            }
        }
        private global::System.Int32 _BolusSortOrderId;
        partial void OnBolusSortOrderIdChanging(global::System.Int32 value);
        partial void OnBolusSortOrderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WardId
        {
            get
            {
                return _WardId;
            }
            set
            {
                OnWardIdChanging(value);
                ReportPropertyChanging("WardId");
                _WardId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WardId");
                OnWardIdChanged();
            }
        }
        private global::System.Int32 _WardId;
        partial void OnWardIdChanging(global::System.Int32 value);
        partial void OnWardIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BolusDrugId
        {
            get
            {
                return _BolusDrugId;
            }
            set
            {
                OnBolusDrugIdChanging(value);
                ReportPropertyChanging("BolusDrugId");
                _BolusDrugId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BolusDrugId");
                OnBolusDrugIdChanged();
            }
        }
        private Nullable<global::System.Int32> _BolusDrugId;
        partial void OnBolusDrugIdChanging(Nullable<global::System.Int32> value);
        partial void OnBolusDrugIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private global::System.Int32 _SortOrder;
        partial void OnSortOrderChanging(global::System.Int32 value);
        partial void OnSortOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SectionHeader
        {
            get
            {
                return _SectionHeader;
            }
            set
            {
                OnSectionHeaderChanging(value);
                ReportPropertyChanging("SectionHeader");
                _SectionHeader = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SectionHeader");
                OnSectionHeaderChanged();
            }
        }
        private global::System.String _SectionHeader;
        partial void OnSectionHeaderChanging(global::System.String value);
        partial void OnSectionHeaderChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PICUdrugs.DAL", "FK_BolusSortOrdering_BolusDrugs", "BolusDrugs")]
        public BolusDrug BolusDrug
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BolusDrug>("PICUdrugs.DAL.FK_BolusSortOrdering_BolusDrugs", "BolusDrugs").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BolusDrug>("PICUdrugs.DAL.FK_BolusSortOrdering_BolusDrugs", "BolusDrugs").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BolusDrug> BolusDrugReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BolusDrug>("PICUdrugs.DAL.FK_BolusSortOrdering_BolusDrugs", "BolusDrugs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BolusDrug>("PICUdrugs.DAL.FK_BolusSortOrdering_BolusDrugs", "BolusDrugs", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PICUdrugs.DAL", "FK_BolusSortOrdering_Wards", "Wards")]
        public Ward Ward
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ward>("PICUdrugs.DAL.FK_BolusSortOrdering_Wards", "Wards").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ward>("PICUdrugs.DAL.FK_BolusSortOrdering_Wards", "Wards").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Ward> WardReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ward>("PICUdrugs.DAL.FK_BolusSortOrdering_Wards", "Wards");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Ward>("PICUdrugs.DAL.FK_BolusSortOrdering_Wards", "Wards", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PICUdrugs.DAL", Name="CdcBmiForAge")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CdcBmiForAge : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CdcBmiForAge object.
        /// </summary>
        /// <param name="lookupVal">Initial value of the LookupVal property.</param>
        /// <param name="gender">Initial value of the Gender property.</param>
        /// <param name="ageMonths">Initial value of the AgeMonths property.</param>
        /// <param name="l">Initial value of the L property.</param>
        /// <param name="m">Initial value of the M property.</param>
        /// <param name="s">Initial value of the S property.</param>
        /// <param name="genderText">Initial value of the GenderText property.</param>
        public static CdcBmiForAge CreateCdcBmiForAge(global::System.Int32 lookupVal, global::System.Byte gender, global::System.Double ageMonths, global::System.Double l, global::System.Double m, global::System.Double s, global::System.String genderText)
        {
            CdcBmiForAge cdcBmiForAge = new CdcBmiForAge();
            cdcBmiForAge.LookupVal = lookupVal;
            cdcBmiForAge.Gender = gender;
            cdcBmiForAge.AgeMonths = ageMonths;
            cdcBmiForAge.L = l;
            cdcBmiForAge.M = m;
            cdcBmiForAge.S = s;
            cdcBmiForAge.GenderText = genderText;
            return cdcBmiForAge;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LookupVal
        {
            get
            {
                return _LookupVal;
            }
            set
            {
                if (_LookupVal != value)
                {
                    OnLookupValChanging(value);
                    ReportPropertyChanging("LookupVal");
                    _LookupVal = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LookupVal");
                    OnLookupValChanged();
                }
            }
        }
        private global::System.Int32 _LookupVal;
        partial void OnLookupValChanging(global::System.Int32 value);
        partial void OnLookupValChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Gender
        {
            get
            {
                return _Gender;
            }
            set
            {
                OnGenderChanging(value);
                ReportPropertyChanging("Gender");
                _Gender = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Gender");
                OnGenderChanged();
            }
        }
        private global::System.Byte _Gender;
        partial void OnGenderChanging(global::System.Byte value);
        partial void OnGenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double AgeMonths
        {
            get
            {
                return _AgeMonths;
            }
            set
            {
                OnAgeMonthsChanging(value);
                ReportPropertyChanging("AgeMonths");
                _AgeMonths = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AgeMonths");
                OnAgeMonthsChanged();
            }
        }
        private global::System.Double _AgeMonths;
        partial void OnAgeMonthsChanging(global::System.Double value);
        partial void OnAgeMonthsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double L
        {
            get
            {
                return _L;
            }
            set
            {
                OnLChanging(value);
                ReportPropertyChanging("L");
                _L = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("L");
                OnLChanged();
            }
        }
        private global::System.Double _L;
        partial void OnLChanging(global::System.Double value);
        partial void OnLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double M
        {
            get
            {
                return _M;
            }
            set
            {
                OnMChanging(value);
                ReportPropertyChanging("M");
                _M = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("M");
                OnMChanged();
            }
        }
        private global::System.Double _M;
        partial void OnMChanging(global::System.Double value);
        partial void OnMChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double S
        {
            get
            {
                return _S;
            }
            set
            {
                OnSChanging(value);
                ReportPropertyChanging("S");
                _S = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("S");
                OnSChanged();
            }
        }
        private global::System.Double _S;
        partial void OnSChanging(global::System.Double value);
        partial void OnSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GenderText
        {
            get
            {
                return _GenderText;
            }
            set
            {
                OnGenderTextChanging(value);
                ReportPropertyChanging("GenderText");
                _GenderText = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("GenderText");
                OnGenderTextChanged();
            }
        }
        private global::System.String _GenderText;
        partial void OnGenderTextChanging(global::System.String value);
        partial void OnGenderTextChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PICUdrugs.DAL", Name="CdcLengthForAge")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CdcLengthForAge : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CdcLengthForAge object.
        /// </summary>
        /// <param name="lookupVal">Initial value of the LookupVal property.</param>
        /// <param name="gender">Initial value of the Gender property.</param>
        /// <param name="ageMonths">Initial value of the AgeMonths property.</param>
        /// <param name="l">Initial value of the L property.</param>
        /// <param name="m">Initial value of the M property.</param>
        /// <param name="s">Initial value of the S property.</param>
        /// <param name="genderText">Initial value of the GenderText property.</param>
        public static CdcLengthForAge CreateCdcLengthForAge(global::System.Int32 lookupVal, global::System.Byte gender, global::System.Double ageMonths, global::System.Double l, global::System.Double m, global::System.Double s, global::System.String genderText)
        {
            CdcLengthForAge cdcLengthForAge = new CdcLengthForAge();
            cdcLengthForAge.LookupVal = lookupVal;
            cdcLengthForAge.Gender = gender;
            cdcLengthForAge.AgeMonths = ageMonths;
            cdcLengthForAge.L = l;
            cdcLengthForAge.M = m;
            cdcLengthForAge.S = s;
            cdcLengthForAge.GenderText = genderText;
            return cdcLengthForAge;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LookupVal
        {
            get
            {
                return _LookupVal;
            }
            set
            {
                if (_LookupVal != value)
                {
                    OnLookupValChanging(value);
                    ReportPropertyChanging("LookupVal");
                    _LookupVal = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LookupVal");
                    OnLookupValChanged();
                }
            }
        }
        private global::System.Int32 _LookupVal;
        partial void OnLookupValChanging(global::System.Int32 value);
        partial void OnLookupValChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Gender
        {
            get
            {
                return _Gender;
            }
            set
            {
                if (_Gender != value)
                {
                    OnGenderChanging(value);
                    ReportPropertyChanging("Gender");
                    _Gender = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Gender");
                    OnGenderChanged();
                }
            }
        }
        private global::System.Byte _Gender;
        partial void OnGenderChanging(global::System.Byte value);
        partial void OnGenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double AgeMonths
        {
            get
            {
                return _AgeMonths;
            }
            set
            {
                if (_AgeMonths != value)
                {
                    OnAgeMonthsChanging(value);
                    ReportPropertyChanging("AgeMonths");
                    _AgeMonths = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AgeMonths");
                    OnAgeMonthsChanged();
                }
            }
        }
        private global::System.Double _AgeMonths;
        partial void OnAgeMonthsChanging(global::System.Double value);
        partial void OnAgeMonthsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double L
        {
            get
            {
                return _L;
            }
            set
            {
                if (_L != value)
                {
                    OnLChanging(value);
                    ReportPropertyChanging("L");
                    _L = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("L");
                    OnLChanged();
                }
            }
        }
        private global::System.Double _L;
        partial void OnLChanging(global::System.Double value);
        partial void OnLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double M
        {
            get
            {
                return _M;
            }
            set
            {
                if (_M != value)
                {
                    OnMChanging(value);
                    ReportPropertyChanging("M");
                    _M = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("M");
                    OnMChanged();
                }
            }
        }
        private global::System.Double _M;
        partial void OnMChanging(global::System.Double value);
        partial void OnMChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double S
        {
            get
            {
                return _S;
            }
            set
            {
                if (_S != value)
                {
                    OnSChanging(value);
                    ReportPropertyChanging("S");
                    _S = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("S");
                    OnSChanged();
                }
            }
        }
        private global::System.Double _S;
        partial void OnSChanging(global::System.Double value);
        partial void OnSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GenderText
        {
            get
            {
                return _GenderText;
            }
            set
            {
                if (_GenderText != value)
                {
                    OnGenderTextChanging(value);
                    ReportPropertyChanging("GenderText");
                    _GenderText = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("GenderText");
                    OnGenderTextChanged();
                }
            }
        }
        private global::System.String _GenderText;
        partial void OnGenderTextChanging(global::System.String value);
        partial void OnGenderTextChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PICUdrugs.DAL", Name="CdcWeightForAge")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CdcWeightForAge : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CdcWeightForAge object.
        /// </summary>
        /// <param name="lookupVal">Initial value of the LookupVal property.</param>
        /// <param name="genderText">Initial value of the GenderText property.</param>
        /// <param name="ageMonths">Initial value of the AgeMonths property.</param>
        /// <param name="l">Initial value of the L property.</param>
        /// <param name="m">Initial value of the M property.</param>
        /// <param name="s">Initial value of the S property.</param>
        /// <param name="gender">Initial value of the Gender property.</param>
        public static CdcWeightForAge CreateCdcWeightForAge(global::System.Int32 lookupVal, global::System.String genderText, global::System.Double ageMonths, global::System.Double l, global::System.Double m, global::System.Double s, global::System.Int32 gender)
        {
            CdcWeightForAge cdcWeightForAge = new CdcWeightForAge();
            cdcWeightForAge.LookupVal = lookupVal;
            cdcWeightForAge.GenderText = genderText;
            cdcWeightForAge.AgeMonths = ageMonths;
            cdcWeightForAge.L = l;
            cdcWeightForAge.M = m;
            cdcWeightForAge.S = s;
            cdcWeightForAge.Gender = gender;
            return cdcWeightForAge;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LookupVal
        {
            get
            {
                return _LookupVal;
            }
            set
            {
                if (_LookupVal != value)
                {
                    OnLookupValChanging(value);
                    ReportPropertyChanging("LookupVal");
                    _LookupVal = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LookupVal");
                    OnLookupValChanged();
                }
            }
        }
        private global::System.Int32 _LookupVal;
        partial void OnLookupValChanging(global::System.Int32 value);
        partial void OnLookupValChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GenderText
        {
            get
            {
                return _GenderText;
            }
            set
            {
                OnGenderTextChanging(value);
                ReportPropertyChanging("GenderText");
                _GenderText = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("GenderText");
                OnGenderTextChanged();
            }
        }
        private global::System.String _GenderText;
        partial void OnGenderTextChanging(global::System.String value);
        partial void OnGenderTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double AgeMonths
        {
            get
            {
                return _AgeMonths;
            }
            set
            {
                OnAgeMonthsChanging(value);
                ReportPropertyChanging("AgeMonths");
                _AgeMonths = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AgeMonths");
                OnAgeMonthsChanged();
            }
        }
        private global::System.Double _AgeMonths;
        partial void OnAgeMonthsChanging(global::System.Double value);
        partial void OnAgeMonthsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double L
        {
            get
            {
                return _L;
            }
            set
            {
                OnLChanging(value);
                ReportPropertyChanging("L");
                _L = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("L");
                OnLChanged();
            }
        }
        private global::System.Double _L;
        partial void OnLChanging(global::System.Double value);
        partial void OnLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double M
        {
            get
            {
                return _M;
            }
            set
            {
                OnMChanging(value);
                ReportPropertyChanging("M");
                _M = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("M");
                OnMChanged();
            }
        }
        private global::System.Double _M;
        partial void OnMChanging(global::System.Double value);
        partial void OnMChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double S
        {
            get
            {
                return _S;
            }
            set
            {
                OnSChanging(value);
                ReportPropertyChanging("S");
                _S = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("S");
                OnSChanged();
            }
        }
        private global::System.Double _S;
        partial void OnSChanging(global::System.Double value);
        partial void OnSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Gender
        {
            get
            {
                return _Gender;
            }
            set
            {
                OnGenderChanging(value);
                ReportPropertyChanging("Gender");
                _Gender = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Gender");
                OnGenderChanged();
            }
        }
        private global::System.Int32 _Gender;
        partial void OnGenderChanging(global::System.Int32 value);
        partial void OnGenderChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PICUdrugs.DAL", Name="DefibJoule")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DefibJoule : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DefibJoule object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="defibId">Initial value of the DefibId property.</param>
        /// <param name="joules">Initial value of the Joules property.</param>
        public static DefibJoule CreateDefibJoule(global::System.Int32 id, global::System.Int32 defibId, global::System.Int32 joules)
        {
            DefibJoule defibJoule = new DefibJoule();
            defibJoule.Id = id;
            defibJoule.DefibId = defibId;
            defibJoule.Joules = joules;
            return defibJoule;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DefibId
        {
            get
            {
                return _DefibId;
            }
            set
            {
                OnDefibIdChanging(value);
                ReportPropertyChanging("DefibId");
                _DefibId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DefibId");
                OnDefibIdChanged();
            }
        }
        private global::System.Int32 _DefibId;
        partial void OnDefibIdChanging(global::System.Int32 value);
        partial void OnDefibIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Joules
        {
            get
            {
                return _Joules;
            }
            set
            {
                OnJoulesChanging(value);
                ReportPropertyChanging("Joules");
                _Joules = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Joules");
                OnJoulesChanged();
            }
        }
        private global::System.Int32 _Joules;
        partial void OnJoulesChanging(global::System.Int32 value);
        partial void OnJoulesChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PICUdrugs.DAL", "FK_DefibJoules_DefibModel", "DefibModel")]
        public DefibModel DefibModel
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DefibModel>("PICUdrugs.DAL.FK_DefibJoules_DefibModel", "DefibModel").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DefibModel>("PICUdrugs.DAL.FK_DefibJoules_DefibModel", "DefibModel").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DefibModel> DefibModelReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DefibModel>("PICUdrugs.DAL.FK_DefibJoules_DefibModel", "DefibModel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DefibModel>("PICUdrugs.DAL.FK_DefibJoules_DefibModel", "DefibModel", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PICUdrugs.DAL", Name="DefibModel")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DefibModel : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DefibModel object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static DefibModel CreateDefibModel(global::System.Int32 id, global::System.String name)
        {
            DefibModel defibModel = new DefibModel();
            defibModel.Id = id;
            defibModel.Name = name;
            return defibModel;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PICUdrugs.DAL", "FK_DefibJoules_DefibModel", "DefibJoules")]
        public EntityCollection<DefibJoule> DefibJoules
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DefibJoule>("PICUdrugs.DAL.FK_DefibJoules_DefibModel", "DefibJoules");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DefibJoule>("PICUdrugs.DAL.FK_DefibJoules_DefibModel", "DefibJoules", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PICUdrugs.DAL", "FK_Wards_DefibModel", "Wards")]
        public EntityCollection<Ward> Wards
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Ward>("PICUdrugs.DAL.FK_Wards_DefibModel", "Wards");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Ward>("PICUdrugs.DAL.FK_Wards_DefibModel", "Wards", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PICUdrugs.DAL", Name="DilutionMethod")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DilutionMethod : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DilutionMethod object.
        /// </summary>
        /// <param name="dilutionMethodId">Initial value of the DilutionMethodId property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="isNeat">Initial value of the IsNeat property.</param>
        /// <param name="isVaryConcentration">Initial value of the IsVaryConcentration property.</param>
        /// <param name="isVaryVolume">Initial value of the IsVaryVolume property.</param>
        /// <param name="isPerKg">Initial value of the IsPerKg property.</param>
        public static DilutionMethod CreateDilutionMethod(global::System.Int32 dilutionMethodId, global::System.String description, global::System.Boolean isNeat, global::System.Boolean isVaryConcentration, global::System.Boolean isVaryVolume, global::System.Boolean isPerKg)
        {
            DilutionMethod dilutionMethod = new DilutionMethod();
            dilutionMethod.DilutionMethodId = dilutionMethodId;
            dilutionMethod.Description = description;
            dilutionMethod.IsNeat = isNeat;
            dilutionMethod.IsVaryConcentration = isVaryConcentration;
            dilutionMethod.IsVaryVolume = isVaryVolume;
            dilutionMethod.IsPerKg = isPerKg;
            return dilutionMethod;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DilutionMethodId
        {
            get
            {
                return _DilutionMethodId;
            }
            set
            {
                if (_DilutionMethodId != value)
                {
                    OnDilutionMethodIdChanging(value);
                    ReportPropertyChanging("DilutionMethodId");
                    _DilutionMethodId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DilutionMethodId");
                    OnDilutionMethodIdChanged();
                }
            }
        }
        private global::System.Int32 _DilutionMethodId;
        partial void OnDilutionMethodIdChanging(global::System.Int32 value);
        partial void OnDilutionMethodIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsNeat
        {
            get
            {
                return _IsNeat;
            }
            set
            {
                OnIsNeatChanging(value);
                ReportPropertyChanging("IsNeat");
                _IsNeat = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsNeat");
                OnIsNeatChanged();
            }
        }
        private global::System.Boolean _IsNeat;
        partial void OnIsNeatChanging(global::System.Boolean value);
        partial void OnIsNeatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsVaryConcentration
        {
            get
            {
                return _IsVaryConcentration;
            }
            set
            {
                OnIsVaryConcentrationChanging(value);
                ReportPropertyChanging("IsVaryConcentration");
                _IsVaryConcentration = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsVaryConcentration");
                OnIsVaryConcentrationChanged();
            }
        }
        private global::System.Boolean _IsVaryConcentration;
        partial void OnIsVaryConcentrationChanging(global::System.Boolean value);
        partial void OnIsVaryConcentrationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsVaryVolume
        {
            get
            {
                return _IsVaryVolume;
            }
            set
            {
                OnIsVaryVolumeChanging(value);
                ReportPropertyChanging("IsVaryVolume");
                _IsVaryVolume = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsVaryVolume");
                OnIsVaryVolumeChanged();
            }
        }
        private global::System.Boolean _IsVaryVolume;
        partial void OnIsVaryVolumeChanging(global::System.Boolean value);
        partial void OnIsVaryVolumeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPerKg
        {
            get
            {
                return _IsPerKg;
            }
            set
            {
                OnIsPerKgChanging(value);
                ReportPropertyChanging("IsPerKg");
                _IsPerKg = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPerKg");
                OnIsPerKgChanged();
            }
        }
        private global::System.Boolean _IsPerKg;
        partial void OnIsPerKgChanging(global::System.Boolean value);
        partial void OnIsPerKgChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PICUdrugs.DAL", "FK_FixedTimeDilutions_DilutionMethods", "FixedTimeDilutions")]
        public EntityCollection<FixedTimeDilution> FixedTimeDilutions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FixedTimeDilution>("PICUdrugs.DAL.FK_FixedTimeDilutions_DilutionMethods", "FixedTimeDilutions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FixedTimeDilution>("PICUdrugs.DAL.FK_FixedTimeDilutions_DilutionMethods", "FixedTimeDilutions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PICUdrugs.DAL", "FK_InfusionDilutions_DilutionMethods", "VariableTimeDilutions")]
        public EntityCollection<VariableTimeDilution> VariableTimeDilutions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<VariableTimeDilution>("PICUdrugs.DAL.FK_InfusionDilutions_DilutionMethods", "VariableTimeDilutions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<VariableTimeDilution>("PICUdrugs.DAL.FK_InfusionDilutions_DilutionMethods", "VariableTimeDilutions", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PICUdrugs.DAL", Name="DoseCat")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DoseCat : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DoseCat object.
        /// </summary>
        /// <param name="doseCatId">Initial value of the DoseCatId property.</param>
        /// <param name="category">Initial value of the Category property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        public static DoseCat CreateDoseCat(global::System.Int32 doseCatId, global::System.String category, global::System.Byte sortOrder)
        {
            DoseCat doseCat = new DoseCat();
            doseCat.DoseCatId = doseCatId;
            doseCat.Category = category;
            doseCat.SortOrder = sortOrder;
            return doseCat;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DoseCatId
        {
            get
            {
                return _DoseCatId;
            }
            set
            {
                if (_DoseCatId != value)
                {
                    OnDoseCatIdChanging(value);
                    ReportPropertyChanging("DoseCatId");
                    _DoseCatId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DoseCatId");
                    OnDoseCatIdChanged();
                }
            }
        }
        private global::System.Int32 _DoseCatId;
        partial void OnDoseCatIdChanging(global::System.Int32 value);
        partial void OnDoseCatIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Category
        {
            get
            {
                return _Category;
            }
            set
            {
                OnCategoryChanging(value);
                ReportPropertyChanging("Category");
                _Category = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Category");
                OnCategoryChanged();
            }
        }
        private global::System.String _Category;
        partial void OnCategoryChanging(global::System.String value);
        partial void OnCategoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private global::System.Byte _SortOrder;
        partial void OnSortOrderChanging(global::System.Byte value);
        partial void OnSortOrderChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PICUdrugs.DAL", "FK_FinalInfusionConcentrations_DoseCats", "VariableTimeConcentrations")]
        public EntityCollection<VariableTimeConcentration> VariableTimeConcentrations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<VariableTimeConcentration>("PICUdrugs.DAL.FK_FinalInfusionConcentrations_DoseCats", "VariableTimeConcentrations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<VariableTimeConcentration>("PICUdrugs.DAL.FK_FinalInfusionConcentrations_DoseCats", "VariableTimeConcentrations", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PICUdrugs.DAL", Name="DrugAmpuleConcentration")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DrugAmpuleConcentration : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DrugAmpuleConcentration object.
        /// </summary>
        /// <param name="ampuleConcentrationId">Initial value of the AmpuleConcentrationId property.</param>
        /// <param name="infusionDrugId">Initial value of the InfusionDrugId property.</param>
        /// <param name="concentration">Initial value of the Concentration property.</param>
        public static DrugAmpuleConcentration CreateDrugAmpuleConcentration(global::System.Int32 ampuleConcentrationId, global::System.Int32 infusionDrugId, global::System.Double concentration)
        {
            DrugAmpuleConcentration drugAmpuleConcentration = new DrugAmpuleConcentration();
            drugAmpuleConcentration.AmpuleConcentrationId = ampuleConcentrationId;
            drugAmpuleConcentration.InfusionDrugId = infusionDrugId;
            drugAmpuleConcentration.Concentration = concentration;
            return drugAmpuleConcentration;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AmpuleConcentrationId
        {
            get
            {
                return _AmpuleConcentrationId;
            }
            set
            {
                if (_AmpuleConcentrationId != value)
                {
                    OnAmpuleConcentrationIdChanging(value);
                    ReportPropertyChanging("AmpuleConcentrationId");
                    _AmpuleConcentrationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AmpuleConcentrationId");
                    OnAmpuleConcentrationIdChanged();
                }
            }
        }
        private global::System.Int32 _AmpuleConcentrationId;
        partial void OnAmpuleConcentrationIdChanging(global::System.Int32 value);
        partial void OnAmpuleConcentrationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InfusionDrugId
        {
            get
            {
                return _InfusionDrugId;
            }
            set
            {
                OnInfusionDrugIdChanging(value);
                ReportPropertyChanging("InfusionDrugId");
                _InfusionDrugId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InfusionDrugId");
                OnInfusionDrugIdChanged();
            }
        }
        private global::System.Int32 _InfusionDrugId;
        partial void OnInfusionDrugIdChanging(global::System.Int32 value);
        partial void OnInfusionDrugIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Concentration
        {
            get
            {
                return _Concentration;
            }
            set
            {
                OnConcentrationChanging(value);
                ReportPropertyChanging("Concentration");
                _Concentration = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Concentration");
                OnConcentrationChanged();
            }
        }
        private global::System.Double _Concentration;
        partial void OnConcentrationChanging(global::System.Double value);
        partial void OnConcentrationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Volume
        {
            get
            {
                return _Volume;
            }
            set
            {
                OnVolumeChanging(value);
                ReportPropertyChanging("Volume");
                _Volume = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Volume");
                OnVolumeChanged();
            }
        }
        private Nullable<global::System.Double> _Volume;
        partial void OnVolumeChanging(Nullable<global::System.Double> value);
        partial void OnVolumeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PICUdrugs.DAL", "FK_DrugAmpuleConcentrations_InfusionDrugs", "InfusionDrugs")]
        public InfusionDrug InfusionDrug
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InfusionDrug>("PICUdrugs.DAL.FK_DrugAmpuleConcentrations_InfusionDrugs", "InfusionDrugs").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InfusionDrug>("PICUdrugs.DAL.FK_DrugAmpuleConcentrations_InfusionDrugs", "InfusionDrugs").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InfusionDrug> InfusionDrugReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InfusionDrug>("PICUdrugs.DAL.FK_DrugAmpuleConcentrations_InfusionDrugs", "InfusionDrugs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InfusionDrug>("PICUdrugs.DAL.FK_DrugAmpuleConcentrations_InfusionDrugs", "InfusionDrugs", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PICUdrugs.DAL", Name="DrugReferenceSource")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DrugReferenceSource : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DrugReferenceSource object.
        /// </summary>
        /// <param name="drugReferenceId">Initial value of the DrugReferenceId property.</param>
        /// <param name="referenceDescription">Initial value of the ReferenceDescription property.</param>
        /// <param name="abbrev">Initial value of the Abbrev property.</param>
        public static DrugReferenceSource CreateDrugReferenceSource(global::System.Int32 drugReferenceId, global::System.String referenceDescription, global::System.String abbrev)
        {
            DrugReferenceSource drugReferenceSource = new DrugReferenceSource();
            drugReferenceSource.DrugReferenceId = drugReferenceId;
            drugReferenceSource.ReferenceDescription = referenceDescription;
            drugReferenceSource.Abbrev = abbrev;
            return drugReferenceSource;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DrugReferenceId
        {
            get
            {
                return _DrugReferenceId;
            }
            set
            {
                if (_DrugReferenceId != value)
                {
                    OnDrugReferenceIdChanging(value);
                    ReportPropertyChanging("DrugReferenceId");
                    _DrugReferenceId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DrugReferenceId");
                    OnDrugReferenceIdChanged();
                }
            }
        }
        private global::System.Int32 _DrugReferenceId;
        partial void OnDrugReferenceIdChanging(global::System.Int32 value);
        partial void OnDrugReferenceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ReferenceDescription
        {
            get
            {
                return _ReferenceDescription;
            }
            set
            {
                OnReferenceDescriptionChanging(value);
                ReportPropertyChanging("ReferenceDescription");
                _ReferenceDescription = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ReferenceDescription");
                OnReferenceDescriptionChanged();
            }
        }
        private global::System.String _ReferenceDescription;
        partial void OnReferenceDescriptionChanging(global::System.String value);
        partial void OnReferenceDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Abbrev
        {
            get
            {
                return _Abbrev;
            }
            set
            {
                OnAbbrevChanging(value);
                ReportPropertyChanging("Abbrev");
                _Abbrev = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Abbrev");
                OnAbbrevChanged();
            }
        }
        private global::System.String _Abbrev;
        partial void OnAbbrevChanging(global::System.String value);
        partial void OnAbbrevChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Hyperlink
        {
            get
            {
                return _Hyperlink;
            }
            set
            {
                OnHyperlinkChanging(value);
                ReportPropertyChanging("Hyperlink");
                _Hyperlink = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Hyperlink");
                OnHyperlinkChanged();
            }
        }
        private global::System.String _Hyperlink;
        partial void OnHyperlinkChanging(global::System.String value);
        partial void OnHyperlinkChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PICUdrugs.DAL", "FK_InfusionDrugs_DrugReferences", "InfusionDrugs")]
        public EntityCollection<InfusionDrug> InfusionDrugs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InfusionDrug>("PICUdrugs.DAL.FK_InfusionDrugs_DrugReferences", "InfusionDrugs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InfusionDrug>("PICUdrugs.DAL.FK_InfusionDrugs_DrugReferences", "InfusionDrugs", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PICUdrugs.DAL", Name="DrugRoute")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DrugRoute : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DrugRoute object.
        /// </summary>
        /// <param name="routeId">Initial value of the RouteId property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="abbrev">Initial value of the Abbrev property.</param>
        public static DrugRoute CreateDrugRoute(global::System.Int32 routeId, global::System.String description, global::System.String abbrev)
        {
            DrugRoute drugRoute = new DrugRoute();
            drugRoute.RouteId = routeId;
            drugRoute.Description = description;
            drugRoute.Abbrev = abbrev;
            return drugRoute;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RouteId
        {
            get
            {
                return _RouteId;
            }
            set
            {
                if (_RouteId != value)
                {
                    OnRouteIdChanging(value);
                    ReportPropertyChanging("RouteId");
                    _RouteId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RouteId");
                    OnRouteIdChanged();
                }
            }
        }
        private global::System.Int32 _RouteId;
        partial void OnRouteIdChanging(global::System.Int32 value);
        partial void OnRouteIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Abbrev
        {
            get
            {
                return _Abbrev;
            }
            set
            {
                OnAbbrevChanging(value);
                ReportPropertyChanging("Abbrev");
                _Abbrev = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Abbrev");
                OnAbbrevChanged();
            }
        }
        private global::System.String _Abbrev;
        partial void OnAbbrevChanging(global::System.String value);
        partial void OnAbbrevChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PICUdrugs.DAL", "FK_InfusionDrugs_DrugRoutes", "InfusionDrugs")]
        public EntityCollection<InfusionDrug> InfusionDrugs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InfusionDrug>("PICUdrugs.DAL.FK_InfusionDrugs_DrugRoutes", "InfusionDrugs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InfusionDrug>("PICUdrugs.DAL.FK_InfusionDrugs_DrugRoutes", "InfusionDrugs", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PICUdrugs.DAL", Name="FixedTimeConcentration")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FixedTimeConcentration : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FixedTimeConcentration object.
        /// </summary>
        /// <param name="infusionConcentrationId">Initial value of the InfusionConcentrationId property.</param>
        /// <param name="infusionDilutionId">Initial value of the InfusionDilutionId property.</param>
        /// <param name="concentration">Initial value of the Concentration property.</param>
        /// <param name="stopMinutes">Initial value of the StopMinutes property.</param>
        /// <param name="rate">Initial value of the Rate property.</param>
        public static FixedTimeConcentration CreateFixedTimeConcentration(global::System.Int32 infusionConcentrationId, global::System.Int32 infusionDilutionId, global::System.Double concentration, global::System.Int32 stopMinutes, global::System.Double rate)
        {
            FixedTimeConcentration fixedTimeConcentration = new FixedTimeConcentration();
            fixedTimeConcentration.InfusionConcentrationId = infusionConcentrationId;
            fixedTimeConcentration.InfusionDilutionId = infusionDilutionId;
            fixedTimeConcentration.Concentration = concentration;
            fixedTimeConcentration.StopMinutes = stopMinutes;
            fixedTimeConcentration.Rate = rate;
            return fixedTimeConcentration;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InfusionConcentrationId
        {
            get
            {
                return _InfusionConcentrationId;
            }
            set
            {
                if (_InfusionConcentrationId != value)
                {
                    OnInfusionConcentrationIdChanging(value);
                    ReportPropertyChanging("InfusionConcentrationId");
                    _InfusionConcentrationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InfusionConcentrationId");
                    OnInfusionConcentrationIdChanged();
                }
            }
        }
        private global::System.Int32 _InfusionConcentrationId;
        partial void OnInfusionConcentrationIdChanging(global::System.Int32 value);
        partial void OnInfusionConcentrationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InfusionDilutionId
        {
            get
            {
                return _InfusionDilutionId;
            }
            set
            {
                OnInfusionDilutionIdChanging(value);
                ReportPropertyChanging("InfusionDilutionId");
                _InfusionDilutionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InfusionDilutionId");
                OnInfusionDilutionIdChanged();
            }
        }
        private global::System.Int32 _InfusionDilutionId;
        partial void OnInfusionDilutionIdChanging(global::System.Int32 value);
        partial void OnInfusionDilutionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Concentration
        {
            get
            {
                return _Concentration;
            }
            set
            {
                OnConcentrationChanging(value);
                ReportPropertyChanging("Concentration");
                _Concentration = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Concentration");
                OnConcentrationChanged();
            }
        }
        private global::System.Double _Concentration;
        partial void OnConcentrationChanging(global::System.Double value);
        partial void OnConcentrationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> Volume
        {
            get
            {
                return _Volume;
            }
            set
            {
                OnVolumeChanging(value);
                ReportPropertyChanging("Volume");
                _Volume = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Volume");
                OnVolumeChanged();
            }
        }
        private Nullable<global::System.Int16> _Volume;
        partial void OnVolumeChanging(Nullable<global::System.Int16> value);
        partial void OnVolumeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StopMinutes
        {
            get
            {
                return _StopMinutes;
            }
            set
            {
                OnStopMinutesChanging(value);
                ReportPropertyChanging("StopMinutes");
                _StopMinutes = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StopMinutes");
                OnStopMinutesChanged();
            }
        }
        private global::System.Int32 _StopMinutes;
        partial void OnStopMinutesChanging(global::System.Int32 value);
        partial void OnStopMinutesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Rate
        {
            get
            {
                return _Rate;
            }
            set
            {
                OnRateChanging(value);
                ReportPropertyChanging("Rate");
                _Rate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Rate");
                OnRateChanged();
            }
        }
        private global::System.Double _Rate;
        partial void OnRateChanging(global::System.Double value);
        partial void OnRateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PICUdrugs.DAL", "FK_FixedTimeConcentrations_FixedTimeDilutions", "FixedTimeDilutions")]
        public FixedTimeDilution FixedTimeDilution
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FixedTimeDilution>("PICUdrugs.DAL.FK_FixedTimeConcentrations_FixedTimeDilutions", "FixedTimeDilutions").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FixedTimeDilution>("PICUdrugs.DAL.FK_FixedTimeConcentrations_FixedTimeDilutions", "FixedTimeDilutions").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FixedTimeDilution> FixedTimeDilutionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FixedTimeDilution>("PICUdrugs.DAL.FK_FixedTimeConcentrations_FixedTimeDilutions", "FixedTimeDilutions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FixedTimeDilution>("PICUdrugs.DAL.FK_FixedTimeConcentrations_FixedTimeDilutions", "FixedTimeDilutions", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PICUdrugs.DAL", Name="FixedTimeDilution")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FixedTimeDilution : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FixedTimeDilution object.
        /// </summary>
        /// <param name="infusionDilutionId">Initial value of the InfusionDilutionId property.</param>
        /// <param name="infusionDrugId">Initial value of the InfusionDrugId property.</param>
        /// <param name="dilutionMethodId">Initial value of the DilutionMethodId property.</param>
        /// <param name="siPrefixVal">Initial value of the SiPrefixVal property.</param>
        /// <param name="weightMin">Initial value of the WeightMin property.</param>
        /// <param name="weightMax">Initial value of the WeightMax property.</param>
        /// <param name="ageMinMonths">Initial value of the AgeMinMonths property.</param>
        /// <param name="ageMaxMonths">Initial value of the AgeMaxMonths property.</param>
        /// <param name="isPerMin">Initial value of the IsPerMin property.</param>
        public static FixedTimeDilution CreateFixedTimeDilution(global::System.Int32 infusionDilutionId, global::System.Int32 infusionDrugId, global::System.Int32 dilutionMethodId, global::System.Int32 siPrefixVal, global::System.Double weightMin, global::System.Double weightMax, global::System.Int32 ageMinMonths, global::System.Int32 ageMaxMonths, global::System.Boolean isPerMin)
        {
            FixedTimeDilution fixedTimeDilution = new FixedTimeDilution();
            fixedTimeDilution.InfusionDilutionId = infusionDilutionId;
            fixedTimeDilution.InfusionDrugId = infusionDrugId;
            fixedTimeDilution.DilutionMethodId = dilutionMethodId;
            fixedTimeDilution.SiPrefixVal = siPrefixVal;
            fixedTimeDilution.WeightMin = weightMin;
            fixedTimeDilution.WeightMax = weightMax;
            fixedTimeDilution.AgeMinMonths = ageMinMonths;
            fixedTimeDilution.AgeMaxMonths = ageMaxMonths;
            fixedTimeDilution.IsPerMin = isPerMin;
            return fixedTimeDilution;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InfusionDilutionId
        {
            get
            {
                return _InfusionDilutionId;
            }
            set
            {
                if (_InfusionDilutionId != value)
                {
                    OnInfusionDilutionIdChanging(value);
                    ReportPropertyChanging("InfusionDilutionId");
                    _InfusionDilutionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InfusionDilutionId");
                    OnInfusionDilutionIdChanged();
                }
            }
        }
        private global::System.Int32 _InfusionDilutionId;
        partial void OnInfusionDilutionIdChanging(global::System.Int32 value);
        partial void OnInfusionDilutionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InfusionDrugId
        {
            get
            {
                return _InfusionDrugId;
            }
            set
            {
                OnInfusionDrugIdChanging(value);
                ReportPropertyChanging("InfusionDrugId");
                _InfusionDrugId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InfusionDrugId");
                OnInfusionDrugIdChanged();
            }
        }
        private global::System.Int32 _InfusionDrugId;
        partial void OnInfusionDrugIdChanging(global::System.Int32 value);
        partial void OnInfusionDrugIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DilutionMethodId
        {
            get
            {
                return _DilutionMethodId;
            }
            set
            {
                OnDilutionMethodIdChanging(value);
                ReportPropertyChanging("DilutionMethodId");
                _DilutionMethodId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DilutionMethodId");
                OnDilutionMethodIdChanged();
            }
        }
        private global::System.Int32 _DilutionMethodId;
        partial void OnDilutionMethodIdChanging(global::System.Int32 value);
        partial void OnDilutionMethodIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SiPrefixVal
        {
            get
            {
                return _SiPrefixVal;
            }
            set
            {
                OnSiPrefixValChanging(value);
                ReportPropertyChanging("SiPrefixVal");
                _SiPrefixVal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SiPrefixVal");
                OnSiPrefixValChanged();
            }
        }
        private global::System.Int32 _SiPrefixVal;
        partial void OnSiPrefixValChanging(global::System.Int32 value);
        partial void OnSiPrefixValChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double WeightMin
        {
            get
            {
                return _WeightMin;
            }
            set
            {
                OnWeightMinChanging(value);
                ReportPropertyChanging("WeightMin");
                _WeightMin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WeightMin");
                OnWeightMinChanged();
            }
        }
        private global::System.Double _WeightMin;
        partial void OnWeightMinChanging(global::System.Double value);
        partial void OnWeightMinChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double WeightMax
        {
            get
            {
                return _WeightMax;
            }
            set
            {
                OnWeightMaxChanging(value);
                ReportPropertyChanging("WeightMax");
                _WeightMax = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WeightMax");
                OnWeightMaxChanged();
            }
        }
        private global::System.Double _WeightMax;
        partial void OnWeightMaxChanging(global::System.Double value);
        partial void OnWeightMaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AgeMinMonths
        {
            get
            {
                return _AgeMinMonths;
            }
            set
            {
                OnAgeMinMonthsChanging(value);
                ReportPropertyChanging("AgeMinMonths");
                _AgeMinMonths = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AgeMinMonths");
                OnAgeMinMonthsChanged();
            }
        }
        private global::System.Int32 _AgeMinMonths;
        partial void OnAgeMinMonthsChanging(global::System.Int32 value);
        partial void OnAgeMinMonthsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AgeMaxMonths
        {
            get
            {
                return _AgeMaxMonths;
            }
            set
            {
                OnAgeMaxMonthsChanging(value);
                ReportPropertyChanging("AgeMaxMonths");
                _AgeMaxMonths = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AgeMaxMonths");
                OnAgeMaxMonthsChanged();
            }
        }
        private global::System.Int32 _AgeMaxMonths;
        partial void OnAgeMaxMonthsChanging(global::System.Int32 value);
        partial void OnAgeMaxMonthsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPerMin
        {
            get
            {
                return _IsPerMin;
            }
            set
            {
                OnIsPerMinChanging(value);
                ReportPropertyChanging("IsPerMin");
                _IsPerMin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPerMin");
                OnIsPerMinChanged();
            }
        }
        private global::System.Boolean _IsPerMin;
        partial void OnIsPerMinChanging(global::System.Boolean value);
        partial void OnIsPerMinChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ReferencePage
        {
            get
            {
                return _ReferencePage;
            }
            set
            {
                OnReferencePageChanging(value);
                ReportPropertyChanging("ReferencePage");
                _ReferencePage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ReferencePage");
                OnReferencePageChanged();
            }
        }
        private global::System.String _ReferencePage;
        partial void OnReferencePageChanging(global::System.String value);
        partial void OnReferencePageChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PICUdrugs.DAL", "FK_FixedTimeDilutions_DilutionMethods", "DilutionMethods")]
        public DilutionMethod DilutionMethod
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DilutionMethod>("PICUdrugs.DAL.FK_FixedTimeDilutions_DilutionMethods", "DilutionMethods").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DilutionMethod>("PICUdrugs.DAL.FK_FixedTimeDilutions_DilutionMethods", "DilutionMethods").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DilutionMethod> DilutionMethodReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DilutionMethod>("PICUdrugs.DAL.FK_FixedTimeDilutions_DilutionMethods", "DilutionMethods");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DilutionMethod>("PICUdrugs.DAL.FK_FixedTimeDilutions_DilutionMethods", "DilutionMethods", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PICUdrugs.DAL", "FK_FixedTimeConcentrations_FixedTimeDilutions", "FixedTimeConcentrations")]
        public EntityCollection<FixedTimeConcentration> FixedTimeConcentrations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FixedTimeConcentration>("PICUdrugs.DAL.FK_FixedTimeConcentrations_FixedTimeDilutions", "FixedTimeConcentrations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FixedTimeConcentration>("PICUdrugs.DAL.FK_FixedTimeConcentrations_FixedTimeDilutions", "FixedTimeConcentrations", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PICUdrugs.DAL", "FK_FixedTimeDilutions_InfusionDrugs", "InfusionDrugs")]
        public InfusionDrug InfusionDrug
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InfusionDrug>("PICUdrugs.DAL.FK_FixedTimeDilutions_InfusionDrugs", "InfusionDrugs").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InfusionDrug>("PICUdrugs.DAL.FK_FixedTimeDilutions_InfusionDrugs", "InfusionDrugs").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InfusionDrug> InfusionDrugReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InfusionDrug>("PICUdrugs.DAL.FK_FixedTimeDilutions_InfusionDrugs", "InfusionDrugs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InfusionDrug>("PICUdrugs.DAL.FK_FixedTimeDilutions_InfusionDrugs", "InfusionDrugs", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PICUdrugs.DAL", Name="InfusionDiluent")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InfusionDiluent : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InfusionDiluent object.
        /// </summary>
        /// <param name="diluentId">Initial value of the DiluentId property.</param>
        /// <param name="diluentType">Initial value of the DiluentType property.</param>
        /// <param name="abbrev">Initial value of the Abbrev property.</param>
        public static InfusionDiluent CreateInfusionDiluent(global::System.Int32 diluentId, global::System.String diluentType, global::System.String abbrev)
        {
            InfusionDiluent infusionDiluent = new InfusionDiluent();
            infusionDiluent.DiluentId = diluentId;
            infusionDiluent.DiluentType = diluentType;
            infusionDiluent.Abbrev = abbrev;
            return infusionDiluent;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DiluentId
        {
            get
            {
                return _DiluentId;
            }
            set
            {
                if (_DiluentId != value)
                {
                    OnDiluentIdChanging(value);
                    ReportPropertyChanging("DiluentId");
                    _DiluentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DiluentId");
                    OnDiluentIdChanged();
                }
            }
        }
        private global::System.Int32 _DiluentId;
        partial void OnDiluentIdChanging(global::System.Int32 value);
        partial void OnDiluentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiluentType
        {
            get
            {
                return _DiluentType;
            }
            set
            {
                OnDiluentTypeChanging(value);
                ReportPropertyChanging("DiluentType");
                _DiluentType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DiluentType");
                OnDiluentTypeChanged();
            }
        }
        private global::System.String _DiluentType;
        partial void OnDiluentTypeChanging(global::System.String value);
        partial void OnDiluentTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Abbrev
        {
            get
            {
                return _Abbrev;
            }
            set
            {
                OnAbbrevChanging(value);
                ReportPropertyChanging("Abbrev");
                _Abbrev = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Abbrev");
                OnAbbrevChanged();
            }
        }
        private global::System.String _Abbrev;
        partial void OnAbbrevChanging(global::System.String value);
        partial void OnAbbrevChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PICUdrugs.DAL", "FK_InfusionDrugs_InfusionDiluents", "InfusionDrugs")]
        public EntityCollection<InfusionDrug> InfusionDrugs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InfusionDrug>("PICUdrugs.DAL.FK_InfusionDrugs_InfusionDiluents", "InfusionDrugs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InfusionDrug>("PICUdrugs.DAL.FK_InfusionDrugs_InfusionDiluents", "InfusionDrugs", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PICUdrugs.DAL", Name="InfusionDrug")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InfusionDrug : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InfusionDrug object.
        /// </summary>
        /// <param name="infusionDrugId">Initial value of the InfusionDrugId property.</param>
        /// <param name="fullname">Initial value of the Fullname property.</param>
        /// <param name="siPrefixVal">Initial value of the SiPrefixVal property.</param>
        /// <param name="siUnitId">Initial value of the SiUnitId property.</param>
        /// <param name="infusionDiluentId">Initial value of the InfusionDiluentId property.</param>
        /// <param name="isTitratable">Initial value of the IsTitratable property.</param>
        public static InfusionDrug CreateInfusionDrug(global::System.Int32 infusionDrugId, global::System.String fullname, global::System.Int32 siPrefixVal, global::System.Int32 siUnitId, global::System.Int32 infusionDiluentId, global::System.Boolean isTitratable)
        {
            InfusionDrug infusionDrug = new InfusionDrug();
            infusionDrug.InfusionDrugId = infusionDrugId;
            infusionDrug.Fullname = fullname;
            infusionDrug.SiPrefixVal = siPrefixVal;
            infusionDrug.SiUnitId = siUnitId;
            infusionDrug.InfusionDiluentId = infusionDiluentId;
            infusionDrug.IsTitratable = isTitratable;
            return infusionDrug;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InfusionDrugId
        {
            get
            {
                return _InfusionDrugId;
            }
            set
            {
                if (_InfusionDrugId != value)
                {
                    OnInfusionDrugIdChanging(value);
                    ReportPropertyChanging("InfusionDrugId");
                    _InfusionDrugId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InfusionDrugId");
                    OnInfusionDrugIdChanged();
                }
            }
        }
        private global::System.Int32 _InfusionDrugId;
        partial void OnInfusionDrugIdChanging(global::System.Int32 value);
        partial void OnInfusionDrugIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Fullname
        {
            get
            {
                return _Fullname;
            }
            set
            {
                OnFullnameChanging(value);
                ReportPropertyChanging("Fullname");
                _Fullname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Fullname");
                OnFullnameChanged();
            }
        }
        private global::System.String _Fullname;
        partial void OnFullnameChanging(global::System.String value);
        partial void OnFullnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Abbrev
        {
            get
            {
                return _Abbrev;
            }
            set
            {
                OnAbbrevChanging(value);
                ReportPropertyChanging("Abbrev");
                _Abbrev = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Abbrev");
                OnAbbrevChanged();
            }
        }
        private global::System.String _Abbrev;
        partial void OnAbbrevChanging(global::System.String value);
        partial void OnAbbrevChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SiPrefixVal
        {
            get
            {
                return _SiPrefixVal;
            }
            set
            {
                OnSiPrefixValChanging(value);
                ReportPropertyChanging("SiPrefixVal");
                _SiPrefixVal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SiPrefixVal");
                OnSiPrefixValChanged();
            }
        }
        private global::System.Int32 _SiPrefixVal;
        partial void OnSiPrefixValChanging(global::System.Int32 value);
        partial void OnSiPrefixValChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SiUnitId
        {
            get
            {
                return _SiUnitId;
            }
            set
            {
                OnSiUnitIdChanging(value);
                ReportPropertyChanging("SiUnitId");
                _SiUnitId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SiUnitId");
                OnSiUnitIdChanged();
            }
        }
        private global::System.Int32 _SiUnitId;
        partial void OnSiUnitIdChanging(global::System.Int32 value);
        partial void OnSiUnitIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InfusionDiluentId
        {
            get
            {
                return _InfusionDiluentId;
            }
            set
            {
                OnInfusionDiluentIdChanging(value);
                ReportPropertyChanging("InfusionDiluentId");
                _InfusionDiluentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InfusionDiluentId");
                OnInfusionDiluentIdChanged();
            }
        }
        private global::System.Int32 _InfusionDiluentId;
        partial void OnInfusionDiluentIdChanging(global::System.Int32 value);
        partial void OnInfusionDiluentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DrugReferenceId
        {
            get
            {
                return _DrugReferenceId;
            }
            set
            {
                OnDrugReferenceIdChanging(value);
                ReportPropertyChanging("DrugReferenceId");
                _DrugReferenceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DrugReferenceId");
                OnDrugReferenceIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DrugReferenceId;
        partial void OnDrugReferenceIdChanging(Nullable<global::System.Int32> value);
        partial void OnDrugReferenceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RouteId
        {
            get
            {
                return _RouteId;
            }
            set
            {
                OnRouteIdChanging(value);
                ReportPropertyChanging("RouteId");
                _RouteId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RouteId");
                OnRouteIdChanged();
            }
        }
        private Nullable<global::System.Int32> _RouteId;
        partial void OnRouteIdChanging(Nullable<global::System.Int32> value);
        partial void OnRouteIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsTitratable
        {
            get
            {
                return _IsTitratable;
            }
            set
            {
                OnIsTitratableChanging(value);
                ReportPropertyChanging("IsTitratable");
                _IsTitratable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsTitratable");
                OnIsTitratableChanged();
            }
        }
        private global::System.Boolean _IsTitratable;
        partial void OnIsTitratableChanging(global::System.Boolean value);
        partial void OnIsTitratableChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PICUdrugs.DAL", "FK_DrugAmpuleConcentrations_InfusionDrugs", "DrugAmpuleConcentrations")]
        public EntityCollection<DrugAmpuleConcentration> DrugAmpuleConcentrations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DrugAmpuleConcentration>("PICUdrugs.DAL.FK_DrugAmpuleConcentrations_InfusionDrugs", "DrugAmpuleConcentrations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DrugAmpuleConcentration>("PICUdrugs.DAL.FK_DrugAmpuleConcentrations_InfusionDrugs", "DrugAmpuleConcentrations", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PICUdrugs.DAL", "FK_InfusionDrugs_DrugReferences", "DrugReferenceSource")]
        public DrugReferenceSource DrugReferenceSource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DrugReferenceSource>("PICUdrugs.DAL.FK_InfusionDrugs_DrugReferences", "DrugReferenceSource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DrugReferenceSource>("PICUdrugs.DAL.FK_InfusionDrugs_DrugReferences", "DrugReferenceSource").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DrugReferenceSource> DrugReferenceSourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DrugReferenceSource>("PICUdrugs.DAL.FK_InfusionDrugs_DrugReferences", "DrugReferenceSource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DrugReferenceSource>("PICUdrugs.DAL.FK_InfusionDrugs_DrugReferences", "DrugReferenceSource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PICUdrugs.DAL", "FK_InfusionDrugs_DrugRoutes", "DrugRoutes")]
        public DrugRoute DrugRoute
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DrugRoute>("PICUdrugs.DAL.FK_InfusionDrugs_DrugRoutes", "DrugRoutes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DrugRoute>("PICUdrugs.DAL.FK_InfusionDrugs_DrugRoutes", "DrugRoutes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DrugRoute> DrugRouteReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DrugRoute>("PICUdrugs.DAL.FK_InfusionDrugs_DrugRoutes", "DrugRoutes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DrugRoute>("PICUdrugs.DAL.FK_InfusionDrugs_DrugRoutes", "DrugRoutes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PICUdrugs.DAL", "FK_FixedTimeDilutions_InfusionDrugs", "FixedTimeDilutions")]
        public EntityCollection<FixedTimeDilution> FixedTimeDilutions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FixedTimeDilution>("PICUdrugs.DAL.FK_FixedTimeDilutions_InfusionDrugs", "FixedTimeDilutions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FixedTimeDilution>("PICUdrugs.DAL.FK_FixedTimeDilutions_InfusionDrugs", "FixedTimeDilutions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PICUdrugs.DAL", "FK_InfusionDrugs_InfusionDiluents", "InfusionDiluents")]
        public InfusionDiluent InfusionDiluent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InfusionDiluent>("PICUdrugs.DAL.FK_InfusionDrugs_InfusionDiluents", "InfusionDiluents").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InfusionDiluent>("PICUdrugs.DAL.FK_InfusionDrugs_InfusionDiluents", "InfusionDiluents").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InfusionDiluent> InfusionDiluentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InfusionDiluent>("PICUdrugs.DAL.FK_InfusionDrugs_InfusionDiluents", "InfusionDiluents");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InfusionDiluent>("PICUdrugs.DAL.FK_InfusionDrugs_InfusionDiluents", "InfusionDiluents", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PICUdrugs.DAL", "FK_InfusionDilutions_InfusionDrugs", "VariableTimeDilutions")]
        public EntityCollection<VariableTimeDilution> VariableTimeDilutions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<VariableTimeDilution>("PICUdrugs.DAL.FK_InfusionDilutions_InfusionDrugs", "VariableTimeDilutions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<VariableTimeDilution>("PICUdrugs.DAL.FK_InfusionDilutions_InfusionDrugs", "VariableTimeDilutions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PICUdrugs.DAL", "FK_InfusionDrugs_SiUnits", "SiUnits")]
        public SiUnit SiUnit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SiUnit>("PICUdrugs.DAL.FK_InfusionDrugs_SiUnits", "SiUnits").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SiUnit>("PICUdrugs.DAL.FK_InfusionDrugs_SiUnits", "SiUnits").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SiUnit> SiUnitReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SiUnit>("PICUdrugs.DAL.FK_InfusionDrugs_SiUnits", "SiUnits");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SiUnit>("PICUdrugs.DAL.FK_InfusionDrugs_SiUnits", "SiUnits", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PICUdrugs.DAL", "FK_InfusionSortOrdering_InfusionDrugs", "InfusionSortOrdering")]
        public EntityCollection<InfusionSortOrdering> InfusionSortOrderings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InfusionSortOrdering>("PICUdrugs.DAL.FK_InfusionSortOrdering_InfusionDrugs", "InfusionSortOrdering");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InfusionSortOrdering>("PICUdrugs.DAL.FK_InfusionSortOrdering_InfusionDrugs", "InfusionSortOrdering", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PICUdrugs.DAL", Name="InfusionSortOrdering")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InfusionSortOrdering : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InfusionSortOrdering object.
        /// </summary>
        /// <param name="infusionSortOrderId">Initial value of the InfusionSortOrderId property.</param>
        /// <param name="wardId">Initial value of the WardId property.</param>
        /// <param name="infusionDrugId">Initial value of the InfusionDrugId property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        public static InfusionSortOrdering CreateInfusionSortOrdering(global::System.Int32 infusionSortOrderId, global::System.Int32 wardId, global::System.Int32 infusionDrugId, global::System.Int32 sortOrder)
        {
            InfusionSortOrdering infusionSortOrdering = new InfusionSortOrdering();
            infusionSortOrdering.InfusionSortOrderId = infusionSortOrderId;
            infusionSortOrdering.WardId = wardId;
            infusionSortOrdering.InfusionDrugId = infusionDrugId;
            infusionSortOrdering.SortOrder = sortOrder;
            return infusionSortOrdering;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InfusionSortOrderId
        {
            get
            {
                return _InfusionSortOrderId;
            }
            set
            {
                if (_InfusionSortOrderId != value)
                {
                    OnInfusionSortOrderIdChanging(value);
                    ReportPropertyChanging("InfusionSortOrderId");
                    _InfusionSortOrderId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InfusionSortOrderId");
                    OnInfusionSortOrderIdChanged();
                }
            }
        }
        private global::System.Int32 _InfusionSortOrderId;
        partial void OnInfusionSortOrderIdChanging(global::System.Int32 value);
        partial void OnInfusionSortOrderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WardId
        {
            get
            {
                return _WardId;
            }
            set
            {
                OnWardIdChanging(value);
                ReportPropertyChanging("WardId");
                _WardId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WardId");
                OnWardIdChanged();
            }
        }
        private global::System.Int32 _WardId;
        partial void OnWardIdChanging(global::System.Int32 value);
        partial void OnWardIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InfusionDrugId
        {
            get
            {
                return _InfusionDrugId;
            }
            set
            {
                OnInfusionDrugIdChanging(value);
                ReportPropertyChanging("InfusionDrugId");
                _InfusionDrugId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InfusionDrugId");
                OnInfusionDrugIdChanged();
            }
        }
        private global::System.Int32 _InfusionDrugId;
        partial void OnInfusionDrugIdChanging(global::System.Int32 value);
        partial void OnInfusionDrugIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private global::System.Int32 _SortOrder;
        partial void OnSortOrderChanging(global::System.Int32 value);
        partial void OnSortOrderChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PICUdrugs.DAL", "FK_InfusionSortOrdering_InfusionDrugs", "InfusionDrugs")]
        public InfusionDrug InfusionDrug
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InfusionDrug>("PICUdrugs.DAL.FK_InfusionSortOrdering_InfusionDrugs", "InfusionDrugs").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InfusionDrug>("PICUdrugs.DAL.FK_InfusionSortOrdering_InfusionDrugs", "InfusionDrugs").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InfusionDrug> InfusionDrugReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InfusionDrug>("PICUdrugs.DAL.FK_InfusionSortOrdering_InfusionDrugs", "InfusionDrugs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InfusionDrug>("PICUdrugs.DAL.FK_InfusionSortOrdering_InfusionDrugs", "InfusionDrugs", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PICUdrugs.DAL", "FK_InfusionSortOrdering_Wards", "Wards")]
        public Ward Ward
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ward>("PICUdrugs.DAL.FK_InfusionSortOrdering_Wards", "Wards").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ward>("PICUdrugs.DAL.FK_InfusionSortOrdering_Wards", "Wards").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Ward> WardReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ward>("PICUdrugs.DAL.FK_InfusionSortOrdering_Wards", "Wards");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Ward>("PICUdrugs.DAL.FK_InfusionSortOrdering_Wards", "Wards", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PICUdrugs.DAL", Name="SiUnit")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SiUnit : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SiUnit object.
        /// </summary>
        /// <param name="siUnitId">Initial value of the SiUnitId property.</param>
        /// <param name="measure">Initial value of the Measure property.</param>
        public static SiUnit CreateSiUnit(global::System.Int32 siUnitId, global::System.String measure)
        {
            SiUnit siUnit = new SiUnit();
            siUnit.SiUnitId = siUnitId;
            siUnit.Measure = measure;
            return siUnit;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SiUnitId
        {
            get
            {
                return _SiUnitId;
            }
            set
            {
                if (_SiUnitId != value)
                {
                    OnSiUnitIdChanging(value);
                    ReportPropertyChanging("SiUnitId");
                    _SiUnitId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SiUnitId");
                    OnSiUnitIdChanged();
                }
            }
        }
        private global::System.Int32 _SiUnitId;
        partial void OnSiUnitIdChanging(global::System.Int32 value);
        partial void OnSiUnitIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Measure
        {
            get
            {
                return _Measure;
            }
            set
            {
                OnMeasureChanging(value);
                ReportPropertyChanging("Measure");
                _Measure = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Measure");
                OnMeasureChanged();
            }
        }
        private global::System.String _Measure;
        partial void OnMeasureChanging(global::System.String value);
        partial void OnMeasureChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PICUdrugs.DAL", "FK_InfusionDrugs_SiUnits", "InfusionDrugs")]
        public EntityCollection<InfusionDrug> InfusionDrugs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InfusionDrug>("PICUdrugs.DAL.FK_InfusionDrugs_SiUnits", "InfusionDrugs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InfusionDrug>("PICUdrugs.DAL.FK_InfusionDrugs_SiUnits", "InfusionDrugs", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PICUdrugs.DAL", Name="VariableTimeConcentration")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VariableTimeConcentration : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new VariableTimeConcentration object.
        /// </summary>
        /// <param name="infusionConcentrationId">Initial value of the InfusionConcentrationId property.</param>
        /// <param name="infusionDilutionId">Initial value of the InfusionDilutionId property.</param>
        /// <param name="concentration">Initial value of the Concentration property.</param>
        public static VariableTimeConcentration CreateVariableTimeConcentration(global::System.Int32 infusionConcentrationId, global::System.Int32 infusionDilutionId, global::System.Double concentration)
        {
            VariableTimeConcentration variableTimeConcentration = new VariableTimeConcentration();
            variableTimeConcentration.InfusionConcentrationId = infusionConcentrationId;
            variableTimeConcentration.InfusionDilutionId = infusionDilutionId;
            variableTimeConcentration.Concentration = concentration;
            return variableTimeConcentration;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InfusionConcentrationId
        {
            get
            {
                return _InfusionConcentrationId;
            }
            set
            {
                if (_InfusionConcentrationId != value)
                {
                    OnInfusionConcentrationIdChanging(value);
                    ReportPropertyChanging("InfusionConcentrationId");
                    _InfusionConcentrationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InfusionConcentrationId");
                    OnInfusionConcentrationIdChanged();
                }
            }
        }
        private global::System.Int32 _InfusionConcentrationId;
        partial void OnInfusionConcentrationIdChanging(global::System.Int32 value);
        partial void OnInfusionConcentrationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DoseCatId
        {
            get
            {
                return _DoseCatId;
            }
            set
            {
                OnDoseCatIdChanging(value);
                ReportPropertyChanging("DoseCatId");
                _DoseCatId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DoseCatId");
                OnDoseCatIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DoseCatId;
        partial void OnDoseCatIdChanging(Nullable<global::System.Int32> value);
        partial void OnDoseCatIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InfusionDilutionId
        {
            get
            {
                return _InfusionDilutionId;
            }
            set
            {
                OnInfusionDilutionIdChanging(value);
                ReportPropertyChanging("InfusionDilutionId");
                _InfusionDilutionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InfusionDilutionId");
                OnInfusionDilutionIdChanged();
            }
        }
        private global::System.Int32 _InfusionDilutionId;
        partial void OnInfusionDilutionIdChanging(global::System.Int32 value);
        partial void OnInfusionDilutionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Concentration
        {
            get
            {
                return _Concentration;
            }
            set
            {
                OnConcentrationChanging(value);
                ReportPropertyChanging("Concentration");
                _Concentration = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Concentration");
                OnConcentrationChanged();
            }
        }
        private global::System.Double _Concentration;
        partial void OnConcentrationChanging(global::System.Double value);
        partial void OnConcentrationChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PICUdrugs.DAL", "FK_FinalInfusionConcentrations_DoseCats", "DoseCats")]
        public DoseCat DoseCat
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DoseCat>("PICUdrugs.DAL.FK_FinalInfusionConcentrations_DoseCats", "DoseCats").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DoseCat>("PICUdrugs.DAL.FK_FinalInfusionConcentrations_DoseCats", "DoseCats").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DoseCat> DoseCatReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DoseCat>("PICUdrugs.DAL.FK_FinalInfusionConcentrations_DoseCats", "DoseCats");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DoseCat>("PICUdrugs.DAL.FK_FinalInfusionConcentrations_DoseCats", "DoseCats", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PICUdrugs.DAL", "FK_FinalInfusionConcentrations_InfusionDilutions", "VariableTimeDilutions")]
        public VariableTimeDilution VariableTimeDilution
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VariableTimeDilution>("PICUdrugs.DAL.FK_FinalInfusionConcentrations_InfusionDilutions", "VariableTimeDilutions").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VariableTimeDilution>("PICUdrugs.DAL.FK_FinalInfusionConcentrations_InfusionDilutions", "VariableTimeDilutions").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<VariableTimeDilution> VariableTimeDilutionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VariableTimeDilution>("PICUdrugs.DAL.FK_FinalInfusionConcentrations_InfusionDilutions", "VariableTimeDilutions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<VariableTimeDilution>("PICUdrugs.DAL.FK_FinalInfusionConcentrations_InfusionDilutions", "VariableTimeDilutions", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PICUdrugs.DAL", Name="VariableTimeDilution")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VariableTimeDilution : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new VariableTimeDilution object.
        /// </summary>
        /// <param name="infusionDilutionId">Initial value of the InfusionDilutionId property.</param>
        /// <param name="infusionDrugId">Initial value of the InfusionDrugId property.</param>
        /// <param name="dilutionMethodId">Initial value of the DilutionMethodId property.</param>
        /// <param name="siPrefixVal">Initial value of the SiPrefixVal property.</param>
        /// <param name="weightMin">Initial value of the WeightMin property.</param>
        /// <param name="weightMax">Initial value of the WeightMax property.</param>
        /// <param name="ageMinMonths">Initial value of the AgeMinMonths property.</param>
        /// <param name="ageMaxMonths">Initial value of the AgeMaxMonths property.</param>
        /// <param name="rateMin">Initial value of the RateMin property.</param>
        /// <param name="rateMax">Initial value of the RateMax property.</param>
        /// <param name="isPerMin">Initial value of the IsPerMin property.</param>
        public static VariableTimeDilution CreateVariableTimeDilution(global::System.Int32 infusionDilutionId, global::System.Int32 infusionDrugId, global::System.Int32 dilutionMethodId, global::System.Int32 siPrefixVal, global::System.Double weightMin, global::System.Double weightMax, global::System.Int32 ageMinMonths, global::System.Int32 ageMaxMonths, global::System.Double rateMin, global::System.Double rateMax, global::System.Boolean isPerMin)
        {
            VariableTimeDilution variableTimeDilution = new VariableTimeDilution();
            variableTimeDilution.InfusionDilutionId = infusionDilutionId;
            variableTimeDilution.InfusionDrugId = infusionDrugId;
            variableTimeDilution.DilutionMethodId = dilutionMethodId;
            variableTimeDilution.SiPrefixVal = siPrefixVal;
            variableTimeDilution.WeightMin = weightMin;
            variableTimeDilution.WeightMax = weightMax;
            variableTimeDilution.AgeMinMonths = ageMinMonths;
            variableTimeDilution.AgeMaxMonths = ageMaxMonths;
            variableTimeDilution.RateMin = rateMin;
            variableTimeDilution.RateMax = rateMax;
            variableTimeDilution.IsPerMin = isPerMin;
            return variableTimeDilution;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InfusionDilutionId
        {
            get
            {
                return _InfusionDilutionId;
            }
            set
            {
                if (_InfusionDilutionId != value)
                {
                    OnInfusionDilutionIdChanging(value);
                    ReportPropertyChanging("InfusionDilutionId");
                    _InfusionDilutionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InfusionDilutionId");
                    OnInfusionDilutionIdChanged();
                }
            }
        }
        private global::System.Int32 _InfusionDilutionId;
        partial void OnInfusionDilutionIdChanging(global::System.Int32 value);
        partial void OnInfusionDilutionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InfusionDrugId
        {
            get
            {
                return _InfusionDrugId;
            }
            set
            {
                OnInfusionDrugIdChanging(value);
                ReportPropertyChanging("InfusionDrugId");
                _InfusionDrugId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InfusionDrugId");
                OnInfusionDrugIdChanged();
            }
        }
        private global::System.Int32 _InfusionDrugId;
        partial void OnInfusionDrugIdChanging(global::System.Int32 value);
        partial void OnInfusionDrugIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DilutionMethodId
        {
            get
            {
                return _DilutionMethodId;
            }
            set
            {
                OnDilutionMethodIdChanging(value);
                ReportPropertyChanging("DilutionMethodId");
                _DilutionMethodId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DilutionMethodId");
                OnDilutionMethodIdChanged();
            }
        }
        private global::System.Int32 _DilutionMethodId;
        partial void OnDilutionMethodIdChanging(global::System.Int32 value);
        partial void OnDilutionMethodIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SiPrefixVal
        {
            get
            {
                return _SiPrefixVal;
            }
            set
            {
                OnSiPrefixValChanging(value);
                ReportPropertyChanging("SiPrefixVal");
                _SiPrefixVal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SiPrefixVal");
                OnSiPrefixValChanged();
            }
        }
        private global::System.Int32 _SiPrefixVal;
        partial void OnSiPrefixValChanging(global::System.Int32 value);
        partial void OnSiPrefixValChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Volume
        {
            get
            {
                return _Volume;
            }
            set
            {
                OnVolumeChanging(value);
                ReportPropertyChanging("Volume");
                _Volume = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Volume");
                OnVolumeChanged();
            }
        }
        private Nullable<global::System.Int32> _Volume;
        partial void OnVolumeChanging(Nullable<global::System.Int32> value);
        partial void OnVolumeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double WeightMin
        {
            get
            {
                return _WeightMin;
            }
            set
            {
                OnWeightMinChanging(value);
                ReportPropertyChanging("WeightMin");
                _WeightMin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WeightMin");
                OnWeightMinChanged();
            }
        }
        private global::System.Double _WeightMin;
        partial void OnWeightMinChanging(global::System.Double value);
        partial void OnWeightMinChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double WeightMax
        {
            get
            {
                return _WeightMax;
            }
            set
            {
                OnWeightMaxChanging(value);
                ReportPropertyChanging("WeightMax");
                _WeightMax = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WeightMax");
                OnWeightMaxChanged();
            }
        }
        private global::System.Double _WeightMax;
        partial void OnWeightMaxChanging(global::System.Double value);
        partial void OnWeightMaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AgeMinMonths
        {
            get
            {
                return _AgeMinMonths;
            }
            set
            {
                OnAgeMinMonthsChanging(value);
                ReportPropertyChanging("AgeMinMonths");
                _AgeMinMonths = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AgeMinMonths");
                OnAgeMinMonthsChanged();
            }
        }
        private global::System.Int32 _AgeMinMonths;
        partial void OnAgeMinMonthsChanging(global::System.Int32 value);
        partial void OnAgeMinMonthsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AgeMaxMonths
        {
            get
            {
                return _AgeMaxMonths;
            }
            set
            {
                OnAgeMaxMonthsChanging(value);
                ReportPropertyChanging("AgeMaxMonths");
                _AgeMaxMonths = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AgeMaxMonths");
                OnAgeMaxMonthsChanged();
            }
        }
        private global::System.Int32 _AgeMaxMonths;
        partial void OnAgeMaxMonthsChanging(global::System.Int32 value);
        partial void OnAgeMaxMonthsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double RateMin
        {
            get
            {
                return _RateMin;
            }
            set
            {
                OnRateMinChanging(value);
                ReportPropertyChanging("RateMin");
                _RateMin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RateMin");
                OnRateMinChanged();
            }
        }
        private global::System.Double _RateMin;
        partial void OnRateMinChanging(global::System.Double value);
        partial void OnRateMinChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double RateMax
        {
            get
            {
                return _RateMax;
            }
            set
            {
                OnRateMaxChanging(value);
                ReportPropertyChanging("RateMax");
                _RateMax = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RateMax");
                OnRateMaxChanged();
            }
        }
        private global::System.Double _RateMax;
        partial void OnRateMaxChanging(global::System.Double value);
        partial void OnRateMaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPerMin
        {
            get
            {
                return _IsPerMin;
            }
            set
            {
                OnIsPerMinChanging(value);
                ReportPropertyChanging("IsPerMin");
                _IsPerMin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPerMin");
                OnIsPerMinChanged();
            }
        }
        private global::System.Boolean _IsPerMin;
        partial void OnIsPerMinChanging(global::System.Boolean value);
        partial void OnIsPerMinChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ReferencePage
        {
            get
            {
                return _ReferencePage;
            }
            set
            {
                OnReferencePageChanging(value);
                ReportPropertyChanging("ReferencePage");
                _ReferencePage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ReferencePage");
                OnReferencePageChanged();
            }
        }
        private global::System.String _ReferencePage;
        partial void OnReferencePageChanging(global::System.String value);
        partial void OnReferencePageChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PICUdrugs.DAL", "FK_InfusionDilutions_DilutionMethods", "DilutionMethods")]
        public DilutionMethod DilutionMethod
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DilutionMethod>("PICUdrugs.DAL.FK_InfusionDilutions_DilutionMethods", "DilutionMethods").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DilutionMethod>("PICUdrugs.DAL.FK_InfusionDilutions_DilutionMethods", "DilutionMethods").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DilutionMethod> DilutionMethodReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DilutionMethod>("PICUdrugs.DAL.FK_InfusionDilutions_DilutionMethods", "DilutionMethods");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DilutionMethod>("PICUdrugs.DAL.FK_InfusionDilutions_DilutionMethods", "DilutionMethods", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PICUdrugs.DAL", "FK_InfusionDilutions_InfusionDrugs", "InfusionDrugs")]
        public InfusionDrug InfusionDrug
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InfusionDrug>("PICUdrugs.DAL.FK_InfusionDilutions_InfusionDrugs", "InfusionDrugs").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InfusionDrug>("PICUdrugs.DAL.FK_InfusionDilutions_InfusionDrugs", "InfusionDrugs").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InfusionDrug> InfusionDrugReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InfusionDrug>("PICUdrugs.DAL.FK_InfusionDilutions_InfusionDrugs", "InfusionDrugs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InfusionDrug>("PICUdrugs.DAL.FK_InfusionDilutions_InfusionDrugs", "InfusionDrugs", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PICUdrugs.DAL", "FK_FinalInfusionConcentrations_InfusionDilutions", "VariableTimeConcentrations")]
        public EntityCollection<VariableTimeConcentration> VariableTimeConcentrations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<VariableTimeConcentration>("PICUdrugs.DAL.FK_FinalInfusionConcentrations_InfusionDilutions", "VariableTimeConcentrations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<VariableTimeConcentration>("PICUdrugs.DAL.FK_FinalInfusionConcentrations_InfusionDilutions", "VariableTimeConcentrations", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PICUdrugs.DAL", Name="vw_VariableDurationInfusion")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vw_VariableDurationInfusion : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vw_VariableDurationInfusion object.
        /// </summary>
        /// <param name="fullname">Initial value of the Fullname property.</param>
        /// <param name="ampPrefix">Initial value of the ampPrefix property.</param>
        /// <param name="measure">Initial value of the Measure property.</param>
        /// <param name="isNeat">Initial value of the IsNeat property.</param>
        /// <param name="isVaryConcentration">Initial value of the IsVaryConcentration property.</param>
        /// <param name="isVaryVolume">Initial value of the IsVaryVolume property.</param>
        /// <param name="isPerKg">Initial value of the IsPerKg property.</param>
        /// <param name="weightMin">Initial value of the WeightMin property.</param>
        /// <param name="weightMax">Initial value of the WeightMax property.</param>
        /// <param name="ageMinMonths">Initial value of the AgeMinMonths property.</param>
        /// <param name="ageMaxMonths">Initial value of the AgeMaxMonths property.</param>
        /// <param name="rateMin">Initial value of the RateMin property.</param>
        /// <param name="rateMax">Initial value of the RateMax property.</param>
        /// <param name="isPerMin">Initial value of the IsPerMin property.</param>
        /// <param name="concentration">Initial value of the Concentration property.</param>
        /// <param name="infusionConcentrationId">Initial value of the InfusionConcentrationId property.</param>
        /// <param name="dilutionPrefix">Initial value of the DilutionPrefix property.</param>
        public static vw_VariableDurationInfusion Createvw_VariableDurationInfusion(global::System.String fullname, global::System.Int32 ampPrefix, global::System.String measure, global::System.Boolean isNeat, global::System.Boolean isVaryConcentration, global::System.Boolean isVaryVolume, global::System.Boolean isPerKg, global::System.Double weightMin, global::System.Double weightMax, global::System.Int32 ageMinMonths, global::System.Int32 ageMaxMonths, global::System.Double rateMin, global::System.Double rateMax, global::System.Boolean isPerMin, global::System.Double concentration, global::System.Int32 infusionConcentrationId, global::System.Int32 dilutionPrefix)
        {
            vw_VariableDurationInfusion vw_VariableDurationInfusion = new vw_VariableDurationInfusion();
            vw_VariableDurationInfusion.Fullname = fullname;
            vw_VariableDurationInfusion.ampPrefix = ampPrefix;
            vw_VariableDurationInfusion.Measure = measure;
            vw_VariableDurationInfusion.IsNeat = isNeat;
            vw_VariableDurationInfusion.IsVaryConcentration = isVaryConcentration;
            vw_VariableDurationInfusion.IsVaryVolume = isVaryVolume;
            vw_VariableDurationInfusion.IsPerKg = isPerKg;
            vw_VariableDurationInfusion.WeightMin = weightMin;
            vw_VariableDurationInfusion.WeightMax = weightMax;
            vw_VariableDurationInfusion.AgeMinMonths = ageMinMonths;
            vw_VariableDurationInfusion.AgeMaxMonths = ageMaxMonths;
            vw_VariableDurationInfusion.RateMin = rateMin;
            vw_VariableDurationInfusion.RateMax = rateMax;
            vw_VariableDurationInfusion.IsPerMin = isPerMin;
            vw_VariableDurationInfusion.Concentration = concentration;
            vw_VariableDurationInfusion.InfusionConcentrationId = infusionConcentrationId;
            vw_VariableDurationInfusion.DilutionPrefix = dilutionPrefix;
            return vw_VariableDurationInfusion;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> WardId
        {
            get
            {
                return _WardId;
            }
            set
            {
                OnWardIdChanging(value);
                ReportPropertyChanging("WardId");
                _WardId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WardId");
                OnWardIdChanged();
            }
        }
        private Nullable<global::System.Int32> _WardId;
        partial void OnWardIdChanging(Nullable<global::System.Int32> value);
        partial void OnWardIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Fullname
        {
            get
            {
                return _Fullname;
            }
            set
            {
                if (_Fullname != value)
                {
                    OnFullnameChanging(value);
                    ReportPropertyChanging("Fullname");
                    _Fullname = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Fullname");
                    OnFullnameChanged();
                }
            }
        }
        private global::System.String _Fullname;
        partial void OnFullnameChanging(global::System.String value);
        partial void OnFullnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Abbrev
        {
            get
            {
                return _Abbrev;
            }
            set
            {
                OnAbbrevChanging(value);
                ReportPropertyChanging("Abbrev");
                _Abbrev = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Abbrev");
                OnAbbrevChanged();
            }
        }
        private global::System.String _Abbrev;
        partial void OnAbbrevChanging(global::System.String value);
        partial void OnAbbrevChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ampPrefix
        {
            get
            {
                return _ampPrefix;
            }
            set
            {
                if (_ampPrefix != value)
                {
                    OnampPrefixChanging(value);
                    ReportPropertyChanging("ampPrefix");
                    _ampPrefix = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ampPrefix");
                    OnampPrefixChanged();
                }
            }
        }
        private global::System.Int32 _ampPrefix;
        partial void OnampPrefixChanging(global::System.Int32 value);
        partial void OnampPrefixChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Measure
        {
            get
            {
                return _Measure;
            }
            set
            {
                if (_Measure != value)
                {
                    OnMeasureChanging(value);
                    ReportPropertyChanging("Measure");
                    _Measure = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Measure");
                    OnMeasureChanged();
                }
            }
        }
        private global::System.String _Measure;
        partial void OnMeasureChanging(global::System.String value);
        partial void OnMeasureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Category
        {
            get
            {
                return _Category;
            }
            set
            {
                OnCategoryChanging(value);
                ReportPropertyChanging("Category");
                _Category = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Category");
                OnCategoryChanged();
            }
        }
        private global::System.String _Category;
        partial void OnCategoryChanging(global::System.String value);
        partial void OnCategoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsNeat
        {
            get
            {
                return _IsNeat;
            }
            set
            {
                if (_IsNeat != value)
                {
                    OnIsNeatChanging(value);
                    ReportPropertyChanging("IsNeat");
                    _IsNeat = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IsNeat");
                    OnIsNeatChanged();
                }
            }
        }
        private global::System.Boolean _IsNeat;
        partial void OnIsNeatChanging(global::System.Boolean value);
        partial void OnIsNeatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsVaryConcentration
        {
            get
            {
                return _IsVaryConcentration;
            }
            set
            {
                if (_IsVaryConcentration != value)
                {
                    OnIsVaryConcentrationChanging(value);
                    ReportPropertyChanging("IsVaryConcentration");
                    _IsVaryConcentration = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IsVaryConcentration");
                    OnIsVaryConcentrationChanged();
                }
            }
        }
        private global::System.Boolean _IsVaryConcentration;
        partial void OnIsVaryConcentrationChanging(global::System.Boolean value);
        partial void OnIsVaryConcentrationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsVaryVolume
        {
            get
            {
                return _IsVaryVolume;
            }
            set
            {
                if (_IsVaryVolume != value)
                {
                    OnIsVaryVolumeChanging(value);
                    ReportPropertyChanging("IsVaryVolume");
                    _IsVaryVolume = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IsVaryVolume");
                    OnIsVaryVolumeChanged();
                }
            }
        }
        private global::System.Boolean _IsVaryVolume;
        partial void OnIsVaryVolumeChanging(global::System.Boolean value);
        partial void OnIsVaryVolumeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPerKg
        {
            get
            {
                return _IsPerKg;
            }
            set
            {
                if (_IsPerKg != value)
                {
                    OnIsPerKgChanging(value);
                    ReportPropertyChanging("IsPerKg");
                    _IsPerKg = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IsPerKg");
                    OnIsPerKgChanged();
                }
            }
        }
        private global::System.Boolean _IsPerKg;
        partial void OnIsPerKgChanging(global::System.Boolean value);
        partial void OnIsPerKgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Volume
        {
            get
            {
                return _Volume;
            }
            set
            {
                OnVolumeChanging(value);
                ReportPropertyChanging("Volume");
                _Volume = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Volume");
                OnVolumeChanged();
            }
        }
        private Nullable<global::System.Int32> _Volume;
        partial void OnVolumeChanging(Nullable<global::System.Int32> value);
        partial void OnVolumeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double WeightMin
        {
            get
            {
                return _WeightMin;
            }
            set
            {
                if (_WeightMin != value)
                {
                    OnWeightMinChanging(value);
                    ReportPropertyChanging("WeightMin");
                    _WeightMin = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("WeightMin");
                    OnWeightMinChanged();
                }
            }
        }
        private global::System.Double _WeightMin;
        partial void OnWeightMinChanging(global::System.Double value);
        partial void OnWeightMinChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double WeightMax
        {
            get
            {
                return _WeightMax;
            }
            set
            {
                if (_WeightMax != value)
                {
                    OnWeightMaxChanging(value);
                    ReportPropertyChanging("WeightMax");
                    _WeightMax = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("WeightMax");
                    OnWeightMaxChanged();
                }
            }
        }
        private global::System.Double _WeightMax;
        partial void OnWeightMaxChanging(global::System.Double value);
        partial void OnWeightMaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AgeMinMonths
        {
            get
            {
                return _AgeMinMonths;
            }
            set
            {
                if (_AgeMinMonths != value)
                {
                    OnAgeMinMonthsChanging(value);
                    ReportPropertyChanging("AgeMinMonths");
                    _AgeMinMonths = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AgeMinMonths");
                    OnAgeMinMonthsChanged();
                }
            }
        }
        private global::System.Int32 _AgeMinMonths;
        partial void OnAgeMinMonthsChanging(global::System.Int32 value);
        partial void OnAgeMinMonthsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AgeMaxMonths
        {
            get
            {
                return _AgeMaxMonths;
            }
            set
            {
                if (_AgeMaxMonths != value)
                {
                    OnAgeMaxMonthsChanging(value);
                    ReportPropertyChanging("AgeMaxMonths");
                    _AgeMaxMonths = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AgeMaxMonths");
                    OnAgeMaxMonthsChanged();
                }
            }
        }
        private global::System.Int32 _AgeMaxMonths;
        partial void OnAgeMaxMonthsChanging(global::System.Int32 value);
        partial void OnAgeMaxMonthsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double RateMin
        {
            get
            {
                return _RateMin;
            }
            set
            {
                if (_RateMin != value)
                {
                    OnRateMinChanging(value);
                    ReportPropertyChanging("RateMin");
                    _RateMin = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RateMin");
                    OnRateMinChanged();
                }
            }
        }
        private global::System.Double _RateMin;
        partial void OnRateMinChanging(global::System.Double value);
        partial void OnRateMinChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double RateMax
        {
            get
            {
                return _RateMax;
            }
            set
            {
                if (_RateMax != value)
                {
                    OnRateMaxChanging(value);
                    ReportPropertyChanging("RateMax");
                    _RateMax = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RateMax");
                    OnRateMaxChanged();
                }
            }
        }
        private global::System.Double _RateMax;
        partial void OnRateMaxChanging(global::System.Double value);
        partial void OnRateMaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPerMin
        {
            get
            {
                return _IsPerMin;
            }
            set
            {
                if (_IsPerMin != value)
                {
                    OnIsPerMinChanging(value);
                    ReportPropertyChanging("IsPerMin");
                    _IsPerMin = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IsPerMin");
                    OnIsPerMinChanged();
                }
            }
        }
        private global::System.Boolean _IsPerMin;
        partial void OnIsPerMinChanging(global::System.Boolean value);
        partial void OnIsPerMinChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> RoundSigFigs
        {
            get
            {
                return _RoundSigFigs;
            }
            set
            {
                OnRoundSigFigsChanging(value);
                ReportPropertyChanging("RoundSigFigs");
                _RoundSigFigs = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoundSigFigs");
                OnRoundSigFigsChanged();
            }
        }
        private Nullable<global::System.Double> _RoundSigFigs;
        partial void OnRoundSigFigsChanging(Nullable<global::System.Double> value);
        partial void OnRoundSigFigsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Concentration
        {
            get
            {
                return _Concentration;
            }
            set
            {
                if (_Concentration != value)
                {
                    OnConcentrationChanging(value);
                    ReportPropertyChanging("Concentration");
                    _Concentration = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Concentration");
                    OnConcentrationChanged();
                }
            }
        }
        private global::System.Double _Concentration;
        partial void OnConcentrationChanging(global::System.Double value);
        partial void OnConcentrationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InfusionConcentrationId
        {
            get
            {
                return _InfusionConcentrationId;
            }
            set
            {
                if (_InfusionConcentrationId != value)
                {
                    OnInfusionConcentrationIdChanging(value);
                    ReportPropertyChanging("InfusionConcentrationId");
                    _InfusionConcentrationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InfusionConcentrationId");
                    OnInfusionConcentrationIdChanged();
                }
            }
        }
        private global::System.Int32 _InfusionConcentrationId;
        partial void OnInfusionConcentrationIdChanging(global::System.Int32 value);
        partial void OnInfusionConcentrationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DilutionPrefix
        {
            get
            {
                return _DilutionPrefix;
            }
            set
            {
                if (_DilutionPrefix != value)
                {
                    OnDilutionPrefixChanging(value);
                    ReportPropertyChanging("DilutionPrefix");
                    _DilutionPrefix = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DilutionPrefix");
                    OnDilutionPrefixChanged();
                }
            }
        }
        private global::System.Int32 _DilutionPrefix;
        partial void OnDilutionPrefixChanging(global::System.Int32 value);
        partial void OnDilutionPrefixChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DrugSort
        {
            get
            {
                return _DrugSort;
            }
            set
            {
                OnDrugSortChanging(value);
                ReportPropertyChanging("DrugSort");
                _DrugSort = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DrugSort");
                OnDrugSortChanged();
            }
        }
        private Nullable<global::System.Int32> _DrugSort;
        partial void OnDrugSortChanging(Nullable<global::System.Int32> value);
        partial void OnDrugSortChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> CategorySort
        {
            get
            {
                return _CategorySort;
            }
            set
            {
                OnCategorySortChanging(value);
                ReportPropertyChanging("CategorySort");
                _CategorySort = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategorySort");
                OnCategorySortChanged();
            }
        }
        private Nullable<global::System.Byte> _CategorySort;
        partial void OnCategorySortChanging(Nullable<global::System.Byte> value);
        partial void OnCategorySortChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PICUdrugs.DAL", Name="Ward")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Ward : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Ward object.
        /// </summary>
        /// <param name="wardId">Initial value of the WardId property.</param>
        /// <param name="abbrev">Initial value of the Abbrev property.</param>
        /// <param name="fullname">Initial value of the Fullname property.</param>
        /// <param name="defibId">Initial value of the DefibId property.</param>
        public static Ward CreateWard(global::System.Int32 wardId, global::System.String abbrev, global::System.String fullname, global::System.Int32 defibId)
        {
            Ward ward = new Ward();
            ward.WardId = wardId;
            ward.Abbrev = abbrev;
            ward.Fullname = fullname;
            ward.DefibId = defibId;
            return ward;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WardId
        {
            get
            {
                return _WardId;
            }
            set
            {
                if (_WardId != value)
                {
                    OnWardIdChanging(value);
                    ReportPropertyChanging("WardId");
                    _WardId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("WardId");
                    OnWardIdChanged();
                }
            }
        }
        private global::System.Int32 _WardId;
        partial void OnWardIdChanging(global::System.Int32 value);
        partial void OnWardIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Abbrev
        {
            get
            {
                return _Abbrev;
            }
            set
            {
                OnAbbrevChanging(value);
                ReportPropertyChanging("Abbrev");
                _Abbrev = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Abbrev");
                OnAbbrevChanged();
            }
        }
        private global::System.String _Abbrev;
        partial void OnAbbrevChanging(global::System.String value);
        partial void OnAbbrevChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Fullname
        {
            get
            {
                return _Fullname;
            }
            set
            {
                OnFullnameChanging(value);
                ReportPropertyChanging("Fullname");
                _Fullname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Fullname");
                OnFullnameChanged();
            }
        }
        private global::System.String _Fullname;
        partial void OnFullnameChanging(global::System.String value);
        partial void OnFullnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DefibId
        {
            get
            {
                return _DefibId;
            }
            set
            {
                OnDefibIdChanging(value);
                ReportPropertyChanging("DefibId");
                _DefibId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DefibId");
                OnDefibIdChanged();
            }
        }
        private global::System.Int32 _DefibId;
        partial void OnDefibIdChanging(global::System.Int32 value);
        partial void OnDefibIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PICUdrugs.DAL", "FK_BolusSortOrdering_Wards", "BolusSortOrdering")]
        public EntityCollection<BolusSortOrdering> BolusSortOrderings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BolusSortOrdering>("PICUdrugs.DAL.FK_BolusSortOrdering_Wards", "BolusSortOrdering");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BolusSortOrdering>("PICUdrugs.DAL.FK_BolusSortOrdering_Wards", "BolusSortOrdering", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PICUdrugs.DAL", "FK_Wards_DefibModel", "DefibModel")]
        public DefibModel DefibModel
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DefibModel>("PICUdrugs.DAL.FK_Wards_DefibModel", "DefibModel").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DefibModel>("PICUdrugs.DAL.FK_Wards_DefibModel", "DefibModel").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DefibModel> DefibModelReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DefibModel>("PICUdrugs.DAL.FK_Wards_DefibModel", "DefibModel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DefibModel>("PICUdrugs.DAL.FK_Wards_DefibModel", "DefibModel", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PICUdrugs.DAL", "FK_InfusionSortOrdering_Wards", "InfusionSortOrdering")]
        public EntityCollection<InfusionSortOrdering> InfusionSortOrderings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InfusionSortOrdering>("PICUdrugs.DAL.FK_InfusionSortOrdering_Wards", "InfusionSortOrdering");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InfusionSortOrdering>("PICUdrugs.DAL.FK_InfusionSortOrdering_Wards", "InfusionSortOrdering", value);
                }
            }
        }

        #endregion

    }

    #endregion

    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="PICUdrugs.DAL", Name="pVariableTimeInfusions_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class pVariableTimeInfusions_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new pVariableTimeInfusions_Result object.
        /// </summary>
        /// <param name="fullname">Initial value of the Fullname property.</param>
        /// <param name="ampulePrefix">Initial value of the AmpulePrefix property.</param>
        /// <param name="measure">Initial value of the Measure property.</param>
        /// <param name="isNeat">Initial value of the IsNeat property.</param>
        /// <param name="isVaryConcentration">Initial value of the IsVaryConcentration property.</param>
        /// <param name="isVaryVolume">Initial value of the IsVaryVolume property.</param>
        /// <param name="isPerKg">Initial value of the IsPerKg property.</param>
        /// <param name="dilutionPrefix">Initial value of the DilutionPrefix property.</param>
        /// <param name="rateMin">Initial value of the RateMin property.</param>
        /// <param name="rateMax">Initial value of the RateMax property.</param>
        /// <param name="isPerMin">Initial value of the IsPerMin property.</param>
        /// <param name="concentration">Initial value of the Concentration property.</param>
        public static pVariableTimeInfusions_Result CreatepVariableTimeInfusions_Result(global::System.String fullname, global::System.Int32 ampulePrefix, global::System.String measure, global::System.Boolean isNeat, global::System.Boolean isVaryConcentration, global::System.Boolean isVaryVolume, global::System.Boolean isPerKg, global::System.Int32 dilutionPrefix, global::System.Double rateMin, global::System.Double rateMax, global::System.Boolean isPerMin, global::System.Double concentration)
        {
            pVariableTimeInfusions_Result pVariableTimeInfusions_Result = new pVariableTimeInfusions_Result();
            pVariableTimeInfusions_Result.Fullname = fullname;
            pVariableTimeInfusions_Result.AmpulePrefix = ampulePrefix;
            pVariableTimeInfusions_Result.Measure = measure;
            pVariableTimeInfusions_Result.IsNeat = isNeat;
            pVariableTimeInfusions_Result.IsVaryConcentration = isVaryConcentration;
            pVariableTimeInfusions_Result.IsVaryVolume = isVaryVolume;
            pVariableTimeInfusions_Result.IsPerKg = isPerKg;
            pVariableTimeInfusions_Result.DilutionPrefix = dilutionPrefix;
            pVariableTimeInfusions_Result.RateMin = rateMin;
            pVariableTimeInfusions_Result.RateMax = rateMax;
            pVariableTimeInfusions_Result.IsPerMin = isPerMin;
            pVariableTimeInfusions_Result.Concentration = concentration;
            return pVariableTimeInfusions_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Fullname
        {
            get
            {
                return _Fullname;
            }
            set
            {
                OnFullnameChanging(value);
                ReportPropertyChanging("Fullname");
                _Fullname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Fullname");
                OnFullnameChanged();
            }
        }
        private global::System.String _Fullname;
        partial void OnFullnameChanging(global::System.String value);
        partial void OnFullnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Abbrev
        {
            get
            {
                return _Abbrev;
            }
            set
            {
                OnAbbrevChanging(value);
                ReportPropertyChanging("Abbrev");
                _Abbrev = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Abbrev");
                OnAbbrevChanged();
            }
        }
        private global::System.String _Abbrev;
        partial void OnAbbrevChanging(global::System.String value);
        partial void OnAbbrevChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AmpulePrefix
        {
            get
            {
                return _AmpulePrefix;
            }
            set
            {
                OnAmpulePrefixChanging(value);
                ReportPropertyChanging("AmpulePrefix");
                _AmpulePrefix = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AmpulePrefix");
                OnAmpulePrefixChanged();
            }
        }
        private global::System.Int32 _AmpulePrefix;
        partial void OnAmpulePrefixChanging(global::System.Int32 value);
        partial void OnAmpulePrefixChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Measure
        {
            get
            {
                return _Measure;
            }
            set
            {
                OnMeasureChanging(value);
                ReportPropertyChanging("Measure");
                _Measure = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Measure");
                OnMeasureChanged();
            }
        }
        private global::System.String _Measure;
        partial void OnMeasureChanging(global::System.String value);
        partial void OnMeasureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Category
        {
            get
            {
                return _Category;
            }
            set
            {
                OnCategoryChanging(value);
                ReportPropertyChanging("Category");
                _Category = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Category");
                OnCategoryChanged();
            }
        }
        private global::System.String _Category;
        partial void OnCategoryChanging(global::System.String value);
        partial void OnCategoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsNeat
        {
            get
            {
                return _IsNeat;
            }
            set
            {
                OnIsNeatChanging(value);
                ReportPropertyChanging("IsNeat");
                _IsNeat = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsNeat");
                OnIsNeatChanged();
            }
        }
        private global::System.Boolean _IsNeat;
        partial void OnIsNeatChanging(global::System.Boolean value);
        partial void OnIsNeatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsVaryConcentration
        {
            get
            {
                return _IsVaryConcentration;
            }
            set
            {
                OnIsVaryConcentrationChanging(value);
                ReportPropertyChanging("IsVaryConcentration");
                _IsVaryConcentration = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsVaryConcentration");
                OnIsVaryConcentrationChanged();
            }
        }
        private global::System.Boolean _IsVaryConcentration;
        partial void OnIsVaryConcentrationChanging(global::System.Boolean value);
        partial void OnIsVaryConcentrationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsVaryVolume
        {
            get
            {
                return _IsVaryVolume;
            }
            set
            {
                OnIsVaryVolumeChanging(value);
                ReportPropertyChanging("IsVaryVolume");
                _IsVaryVolume = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsVaryVolume");
                OnIsVaryVolumeChanged();
            }
        }
        private global::System.Boolean _IsVaryVolume;
        partial void OnIsVaryVolumeChanging(global::System.Boolean value);
        partial void OnIsVaryVolumeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPerKg
        {
            get
            {
                return _IsPerKg;
            }
            set
            {
                OnIsPerKgChanging(value);
                ReportPropertyChanging("IsPerKg");
                _IsPerKg = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPerKg");
                OnIsPerKgChanged();
            }
        }
        private global::System.Boolean _IsPerKg;
        partial void OnIsPerKgChanging(global::System.Boolean value);
        partial void OnIsPerKgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DilutionPrefix
        {
            get
            {
                return _DilutionPrefix;
            }
            set
            {
                OnDilutionPrefixChanging(value);
                ReportPropertyChanging("DilutionPrefix");
                _DilutionPrefix = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DilutionPrefix");
                OnDilutionPrefixChanged();
            }
        }
        private global::System.Int32 _DilutionPrefix;
        partial void OnDilutionPrefixChanging(global::System.Int32 value);
        partial void OnDilutionPrefixChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Volume
        {
            get
            {
                return _Volume;
            }
            set
            {
                OnVolumeChanging(value);
                ReportPropertyChanging("Volume");
                _Volume = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Volume");
                OnVolumeChanged();
            }
        }
        private Nullable<global::System.Int32> _Volume;
        partial void OnVolumeChanging(Nullable<global::System.Int32> value);
        partial void OnVolumeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double RateMin
        {
            get
            {
                return _RateMin;
            }
            set
            {
                OnRateMinChanging(value);
                ReportPropertyChanging("RateMin");
                _RateMin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RateMin");
                OnRateMinChanged();
            }
        }
        private global::System.Double _RateMin;
        partial void OnRateMinChanging(global::System.Double value);
        partial void OnRateMinChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double RateMax
        {
            get
            {
                return _RateMax;
            }
            set
            {
                OnRateMaxChanging(value);
                ReportPropertyChanging("RateMax");
                _RateMax = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RateMax");
                OnRateMaxChanged();
            }
        }
        private global::System.Double _RateMax;
        partial void OnRateMaxChanging(global::System.Double value);
        partial void OnRateMaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPerMin
        {
            get
            {
                return _IsPerMin;
            }
            set
            {
                OnIsPerMinChanging(value);
                ReportPropertyChanging("IsPerMin");
                _IsPerMin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPerMin");
                OnIsPerMinChanged();
            }
        }
        private global::System.Boolean _IsPerMin;
        partial void OnIsPerMinChanging(global::System.Boolean value);
        partial void OnIsPerMinChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Concentration
        {
            get
            {
                return _Concentration;
            }
            set
            {
                OnConcentrationChanging(value);
                ReportPropertyChanging("Concentration");
                _Concentration = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Concentration");
                OnConcentrationChanged();
            }
        }
        private global::System.Double _Concentration;
        partial void OnConcentrationChanging(global::System.Double value);
        partial void OnConcentrationChanged();

        #endregion

    }

    #endregion

    
}
